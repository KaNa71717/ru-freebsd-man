.\"	$Id: mdoc.7,v 1.287 2021/07/29 17:32:01 schwarze Exp $
.\"
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@bsd.lv>
.\" Copyright (c) 2010, 2011, 2013-2020 Ingo Schwarze <schwarze@openbsd.org>
.\"
.\" Настоящим предоставляется разрешение на использование, копирование, изменение и распространение данного программного обеспечения в любых целях с оплатой или без оплаты при условии, что вышеуказанное уведомление об авторских правах и данное разрешение будут присутствовать во всех копиях.\"
.\" ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ "КАК ЕСТЬ", И АВТОР ОТКАЗЫВАЕТСЯ ОТ ВСЕХ ГАРАНТИЙ В ОТНОШЕНИИ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ВКЛЮЧАЯ ВСЕ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ И ПРИГОДНОСТИ. НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ АВТОР НЕ НЕСЕТ ОТВЕТСТВЕННОСТИ ЗА КАКИЕ-ЛИБО СПЕЦИАЛЬНЫЕ, ПРЯМЫЕ, КОСВЕННЫЕ ИЛИ ПОСЛЕДУЮЩИЕ УБЫТКИ ИЛИ ЛЮБЫЕ УБЫТКИ, СВЯЗАННЫЕ С ПОТЕРЕЙ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ, БУДЬ ТО В СЛУЧАЕ ДОГОВОРНОГО ИСКА, ХАЛАТНОСТИ ИЛИ ДРУГОГО ПРОТИВОПРАВНОГО ДЕЙСТВИЯ, ВОЗНИКШЕГО В РЕЗУЛЬТАТЕ
ИЛИ В СВЯЗИ С ИСПОЛЬЗОВАНИЕМ ИЛИ РАБОТОЙ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ.\"
.Dd $Mdocdate: July 29 2021 $
.Dt MDOC 7
.Os
.Sh Имя
.Nm mdoc
.Nd язык семантической разметки для форматирования страниц руководства
.Sh ОПИСАНИЕ
The
.Nm mdoc
Язык поддерживает создание страниц руководства для
.Xr man 1
полезность за счет возможности семантического описания слов, фраз, разделов страниц и полных страниц руководства, Такие аннотации используются инструментами форматирования для достижения единообразного  представления всех руководств, написанных на
.Nm ,
и поддерживать гиперссылки, если они поддерживаются средством вывода.
.Pp
Этот справочный документ описывает структуру страниц руководства,
 а также синтаксис и использование
.Nm
язык.
Эталонной реализацией инструмента для разбора и форматирования является
.Xr mandoc 1 ;
the
.Sx СОВМЕСТИМОСТЬ
Раздел описывает совместимость с другими реализациями.
.Pp
В
.Nm
документ, строки, начинающиеся с управляющего символа
.Sq \&.
Называются
.Dq макросы.
Первое слово - это имя макроса.
 Оно состоит из двух или трех букв.
 Большинство имен макросов начинаются с заглавной буквы.
 Список доступных макросов см.
.Sx ОБЗОР МАКРОСОВ.
Слова, следующие за именем макроса, являются аргументами макроса, по желанию включающие имена других макросов, которые можно вызвать; см.
.Sx СИНТАКСИС МАКРОСА
детали.
.Pp
Строки, не начинающиеся с управляющего символа, называются
.Dq текстовые строки.
Они предоставляют текст в свободной форме для печати; форматирование текста зависит от соответствующего контекста обработки:
.Bd -литеральный - смещение отступ
\&.Sh Макростроки изменяют состояние управления.
Текстовые строки интерпретируются в рамках текущего состояния.
.Ed
.Pp
Многие аспекты базового синтаксиса языка
.Nm
языка основаны на
.Xr roff 7
язык; см.
.Em СИНТАКСИС ЯЗЫКА
и
.Em СИНТАКСИС МАКРОСА
разделы в
.Xr roff 7
руководство для получения подробной информации, в частности о комментарии, управляющие последовательности, пробельные символы и кавычки.
Тем не менее, использование
.Xr roff 7
запросы в
.Nm
Не рекомендуется использовать документы;
.Xr mandoc 1
поддерживает некоторые из них только для обратной совместимости.
.Sh СТРУКТУРА РУКОВОДСТВА
Хорошо сформированный
.Nm
Документ состоит из пролога, за которым следует один или несколько разделов.
.Pp
Пролог, состоящий из
.Ic \&Dd ,
.Ic \&Dt ,
и
.Ic \&Os
макросы, расположенные в таком порядке, необходимы для каждого документа.
.Pp
Первый раздел (разделы обозначаются
.Ic \&Sh )
должна быть разделом ИМЯ, состоящим как минимум из одного
.Ic \&Nm
после
.Ic \&Nd .
.Pp
После этого, по правилам, необходимо указать по крайней мере
.Em СИНОПСИС
и
.Em ОПИСАНИЕ
Хотя в разных разделах справочника этот показатель различается.
.Pp
Ниже приведен хорошо сформированный образец
.Nm
файл для утилиты
.Qq progname :
.Bd -литеральный - смещение отступ
\&.Dd $\&Mdocdate$
\&.Dt PROGNAME раздел
\&.Os
\&.Sh имя
\&.Nm progname
\&.Nd одна строка о том, что он делает
\&.\e\(dq .Sh LIBRARY
\&.\e\(dq Для разделов 2, 3, и 9 only.
\&.\e\(dq Не использовать в OpenBSD.
\&.Sh СИНОПСИС
\&.Nm progname
\&.Op Fl опции
\&.Ar
\&.Sh ОПИСАНИЕ
The
\&.Nm
утилита обрабатывает файлы ...
\&.\e\(dq .Sh КОНТЕКСТ
\&.\e\(dq Только для функций раздела 9.
\&.\e\(dq .Sh УКАЗАНИЯ ПО РЕАЛИЗАЦИИ
\&.\e\(dq Не использовать в OpenBSD.
\&.\e\(dq .Sh ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
\&.\e\(dq Только для разделов 2, 3 и 9 значения возврата функций.
\&.\e\(dq .Sh Среда окружения 
\&.\e\(dq Только для разделов 1, 6, 7 и 8.
\&.\e\(dq .Sh Файлы
\&.\e\(dq .Sh СОСТОЯНИЕ ВЫХОДА
\&.\e\(dq Только для разделов 1, 6 и 8.
\&.\e\(dq .Sh ПРИМЕРЫ
\&.\e\(dq .Sh ДИАГНОСТИК
\&.\e\(dq Только для разделов 1, 4, 6, 7, 8 и 9 сообщения printf/stderr.
\&.\e\(dq .Sh ОШИБКИ
\&.\e\(dq Только для секций 2, 3, 4 и 9 настройки errno.
\&.\e\(dq .Sh СМОТРИТЕ ТАКЖЕ
\&.\e\(dq .Xr foobar 1
\&.\e\(dq .Sh СТАНДАРТЫ
\&.\e\(dq .Sh ИСТОРИЯ
\&.\e\(dq .Sh АВТОРЫ
\&.\e\(dq .Sh ОСТОРОЖНО
\&.\e\(dq .Sh БАГИ
\&.\e\(dq .Sh АСПЕКТЫ БЕЗОПАСНОСТИ
\&.\e\(dq Не используется в OpenBSD.
.Ed
.Pp
Разделы в
.Nm
документ условно упорядочен, как показано выше.
Разделы должны быть составлены следующим образом:
.Bl -ohang -offset Ds
.It Em ИМЯ
Имя (имена) и однострочное описание задокументированного материала.
Синтаксис для этого следующий:
.Bd -литеральный - смещение отступ
\&.Nm name0 ,
\&.Nm name1 ,
\&.Nm name2
\&.Nd однострочное описание
.Ed
.Pp
Множество
.Sq \&Nm
имена должны быть разделены запятыми.
.Pp
The
.Ic \&Nm
Макрос(ы) должен(ы) предшествовать
.Ic \&Nd
macro.
.Pp
Смотрите
.Ic \&Nm
и
.Ic \&Nd .
.It Em БИБЛИОТЕКА
Имя библиотеки, содержащей документированный материал, который предполагается, что это функция в руководстве раздела 2, 3 или 9.
Синтаксис для этого следующий:
.Bd -literal -offset отступ
\&.Lb libarm
.Ed
.Pp
Смотрите
.Ic \&Lb .
.It Em СИНОПСИС
Документирует синтаксис вызова утилиты, синтаксис вызова функции или конфигурацию устройства.
.Pp
Для первого, утилиты (разделы 1, 6 и 8), это в целом выглядит следующим образом:
.Bd -литеральный - смещение отступ
\&.Nm bar
\&.Op Fl v
\&.Op Fl o Ar файл
\&.Op Ar
\&.Nm foo
\&.Op Fl v
\&.Op Fl o Ar файл
\&.Op Ar
.Ed
.Pp
Команды должны быть расположены в алфавитном порядке.
.Pp
Для второго - вызовы функций (разделы 2, 3, 9):
.Bd - литеральный - смещение отступ
\&.In header.h
\&.Vt extern const char *global;
\&.Ft "char *"
\&.Fn foo "const char *src"
\&.Ft "char *"
\&.Fn bar "const char *src"
.Ed
.Pp
Оформление заказа
.Ic \&In ,
.Ic \&Vt ,
.Ic \&Fn ,
и
.Ic \&Fo
макросы должны следовать соглашениям заголовочных файлов языка C.
.Pp
И третье - конфигурации (раздел 4):
.Bd литеральный - смещение отступ
\&.Cd \(dqit* at isa? port 0x2e\(dq
\&.Cd \(dqit* at isa? port 0x4e\(dq
.Ed
.Pp
Руководства, не вошедшие в эти разделы, как правило, не нуждаются в
.Em СИНОПСИС .
.Pp
Некоторые макросы отображаются по-разному в
.Em СИНОПСИС
раздел, в частности
.Ic \&Nm ,
.Ic \&Cd ,
.Ic \&Fd ,
.Ic \&Fn ,
.Ic \&Fo ,
.Ic \&In ,
.Ic \&Vt ,
и
.Ic \&Ft .
Все эти макросы выводятся в отдельной строке.
Если два таких разнородных макроса вызываются попарно (за исключением
.Ic \&Ft
после
.Ic \&Fo
или
.Ic \&Fn ) ,
они разделены вертикальным пробелом, за исключением случаев, когда
.Ic \&Fo ,
.Ic \&Fn ,
и
.Ic \&Ft ,
которые всегда разделены вертикальным пробелом.
.Pp
Когда текст и макросы, следующие за
.Ic \&Nm
макрос, запускающий входную строку, охватывает несколько выходных строк, все выходные строки, кроме первой, будут иметь отступ для выравнивания с текстом, следующим сразу за
.Ic \&Nm
макрос, вплоть до следующего
.Ic \&Nm ,
.Ic \&Sh ,
или
.Ic \&Ss
макрос или конец закрывающего блока, в зависимости от того, что наступит раньше.
.It Em ОПИСАНИЕ
Это начинается с расширения краткого, в одну строку, описания в
.Em ИМЯ :
.Bd -литеральный -смещение отступ
The
\&.Nm
утилита делает то, это и другое.
.Ed
.Pp
Обычно за ним следует описание опций (если документируется команда), например:
.Bd -literal -offset отступ
Возможны следующие варианты:
\&.Bl \-tag \-width Ds
\&.It Fl v
Вывод подробной информации.
\&.El
.Ed
.Pp
Перечислите варианты в алфавитном порядке,
верхний регистр перед нижним для каждой буквы и
без учета того, принимает ли опция аргумент.
Расположите цифры в порядке возрастания перед всеми вариантами букв.
.Pp
Руководства, не документирующие команду, не будут включать приведенный выше фрагмент.
.Pp
Поскольку
.Em ОПИСАНИЕ
Раздел обычно содержит большую часть текста руководства, в более длинных руководствах часто используется
.Ic \&Ss
макрос для формирования подразделов.
В очень длинных руководствах
.Em ОПИСАНИЕ
может быть разделена на несколько секций, каждая из которых начинается с
.Ic \&Sh
макрос, за которым следует нестандартное имя секции, и каждая из которых имеет несколько подразделов, как в данном случае
.Nm
руководство.
.It Em КОНТЕКСТ
В этом разделе перечислены контексты, в которых могут быть вызваны функции из раздела 9.
Контекстами являются autoconf, процесс или прерывание.
.It Em УКАЗАНИЯ ПО РЕАЛИЗАЦИИ
Здесь должны храниться специфические для конкретной реализации заметки.
Это полезно при реализации стандартных функций, которые могут иметь побочные эффекты или заметные алгоритмические последствия.
.It Em ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
В этом разделе документируются возвращаемые значения функций из разделов 2, 3 и 9.
.Pp
Смотрите
.Ic \&Rv .
.It Em ОКРУЖАЮЩАЯ СРЕДА
Перечисляет переменные окружения, используемые утилитой, и объясняет синтаксис и семантику их значений.
The
.Xr environ 7
В руководстве приведены примеры типичного содержания и форматирования.
.Pp
Смотрите
.Ic \&Ev .
.It Em ФАЙЛЫ
Документируйте используемые файлы.
Полезно задокументировать как имя файла, так и краткое описание того, как
файл используется (created, modified, etc.).
.Pp
Смотрите
.Ic \&Pa .
.It Em СТАТУС ВЫХОДА
В этом разделе описывается
состояние выхода команд для утилит разделов 1, 6 и 8.
Исторически эта информация была описана в
.Em ДИАГНОСТИКА
Теперь эта практика не поощряется.
.Pp
Смотрите
.Ic \&Ex .
.It Em ПРИМЕРЫ
Примеры использования.
Здесь часто содержатся фрагменты хорошо оформленных и протестированных вызовов.
Убедитесь, что примеры работают правильно!
.It Em ДИАГНОСТИКА
Документирование сообщений об ошибках.
В руководствах по разделам 4 и 9 это обычно сообщения, выводимые
ядром на консоль и в журнал ядра.
В разделах 1, 6, 7 и 8 это обычно сообщения, выводимые
пользовательскими программами в стандартный вывод ошибок.
.Pp
Исторически сложилось так, что этот раздел использовался вместо
.Em СТАТУС ВЫХОДА
для руководств в разделах 1, 6 и 8; однако такая практика не рекомендуется.
.Pp
Смотрите
.Ic \&Bl
.Fl diag .
.It Em ОШИБКИ
Документы
.Xr errno 2
настройки в разделах 2, 3, 4 и 9.
.Pp
Смотрите
.Ic \&Er .
.It Em СМОТРИТЕ ТАКЖЕ
Ссылки на другие руководства с соответствующими темами.
Этот раздел должен существовать для большинства руководств.
Перекрестные ссылки условно должны быть упорядочены сначала по разделам, затем
в алфавитном порядке (без учета регистра).
.Pp
Ссылки на другую документацию по теме страницы руководства,
например, на авторитетные книги или журнальные статьи, также могут быть
в этом разделе.
.Pp
Смотрите
.Ic \&Rs
и
.Ic \&Xr .
.It Em СТАНДАРТЫ
Указывает на любые внедренные или используемые стандарты.
Если стандарты не соблюдаются, то
.Em ИСТОРИЯ
вместо этого следует использовать раздел.
.Pp
Смотрите
.Ic \&St .
.It Em ИСТОРИЯ
Краткая история предмета, включая информацию о том, где он был впервые реализован,
и когда он был перенесен или переделан для данной операционной системы.
.It Em АВТОРЫ
Отметки о том, кто написал код и/или документацию.
Авторы, как правило, должны быть указаны по имени и адресу электронной почты.
.Pp
Смотрите
.Ic \&An .
.It Em ОСТОРОЖНО
Часто встречающиеся ошибки и недоразумения должны быть объяснены
в этом разделе.
.It Em БАГИ
Известные ошибки, ограничения и способы их устранения должны быть описаны
в этом разделе.
.It Em ВОПРОСЫ БЕЗОПАСНОСТИ
Документируйте все меры предосторожности, которые должны учитывать операторы.
.El
.Sh ОБЗОР МАКРОСОВ
Этот обзор отсортирован таким образом, что макросы одинакового назначения перечислены
вместе, чтобы помочь найти лучший макрос для любой цели.
Устаревшие макросы не включены в обзор, но могут быть найдены ниже
в алфавитном порядке
.Sx МАКРОССЫЛКА.
.Ss Макросы преамбулы и раздела ИМЯ документа
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Dd Ta дата документа: Cm $\&Mdocdate$ | Ar месяц день , год
.It Ic \&Dt Ta заголовок документа: Ar TITLE раздел Op Ar арка
.It Ic \&Os Ta версия операционной системы: Op Ar система Op Ar версия
.It Ic \&Nm Ta имя документа (один аргумент)
.It Ic \&Nd Ta описание документа (одна строка)
.El
.Ss Разделы и перекрестные ссылки
.Bl - колонка "Brq, Bro, Brc" описание
.It Ic \&Sh Ta заголовок раздела (одна строка)
.It Ic \&Ss Ta заголовок подраздела (одна строка)
.It Ic \&Sx Ta внутренняя перекрестная ссылка на раздел или подраздел
.It Ic \&Xr Ta перекрестная ссылка на другую страницу руководства: Ar название раздела
.It Ic \&Tg Ta тег определения термина Ar Pq <= 1 аргументов
.It Ic \&Pp Ta начало текстового абзаца (без аргументов)
.El
.Ss Отображения и списки
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Bd , \&Ed Ta блок отображения:
.Fl Ar тип
.Op Fl смещение Ar ширина
.Op Fl компактный
.It Ic \&D1 Ta отображение с отступом (одна строка)
.It Ic \&Dl Ta отображение с отступом от литерала (одна строка)
.It Ic \&Ql Ta отображение литералов в строке: Ql текст
.It Ic \&Bl , \&El Ta блок списка:
.Fl Ar type
.Op Fl ширина Ar val
.Op Fl смещение Ar val
.Op Fl компактный
.It Ic \&It Ta элемент списка (синтаксис зависит от типа Fl Ar)
.It Ic \&Ta Ta разделитель ячеек таблицы в Ic \&Bl Fl столбце без списков
.It Ic \&Rs , \&%* , \&Re Ta библиографический блок (ссылки)
.El
.Ss - контроль интервалов
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Pf Ta префикс, без последующего горизонтального пробела (один аргумент)
.It Ic \&Ns Ta римский шрифт, без предшествующего горизонтального пробела (без аргументов)
.It Ic \&Ap Ta апостроф без окружающего пробела (без аргументов)
.It Ic \&Sm Ta переключение режима горизонтального интервала: Op Cm on | off
.It Ic \&Bk , \&Ek Ta сохранить блок: Fl слова
.El
.Ss Семантическая разметка для утилит командной строки
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Nm Ta начало блока SYNOPSIS с именем утилиты
.It Ic \&Fl Ta опции командной строки (флаги) (>=0 аргументов)
.It Ic \&Cm Ta модификатор команды (>0 аргументов)
.It Ic \&Ar Ta аргументы команды (>=0 аргументов)
.It Ic \&Op , \&Oo , \&Oc Ta необязательные элементы синтаксиса (корпус)
.It Ic \&Ic Ta внутренняя или интерактивная команда (>0 аргументов)
.It Ic \&Ev Ta переменная окружения (>0 аргументов)
.It Ic \&Pa Ta путь к файловой системе (>=0 аргументов)
.El
.Ss Семантическая разметка для библиотек функций
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Lb Ta библиотека функций (один аргумент)
.It Ic \&In Ta включаемый файл (один аргумент)
.It Ic \&Fd Ta другая директива препроцессора (>0 аргументов)
.It Ic \&Ft Ta тип функции (>0 аргументов)
.It Ic \&Fo , \&Fc Ta функциональный блок: Ar funcname
.It Ic \&Fn Ta имя функции: Ar funcname Op Ar аргумент ...
.It Ic \&Fa Ta аргумент функции (>0 аргументов)
.It Ic \&Vt Ta тип переменной (>0 аргументов)
.It Ic \&Va Ta имя переменной (>0 аргументов)
.It Ic \&Dv Ta определенная переменная или константа препроцессора (>0 аргументов)
.It Ic \&Er Ta константа ошибки (>0 аргументов)
.It Ic \&Ev Ta переменная окружения (>0 аргументов)
.El
.Ss Различная семантическая разметка
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&An Ta имя автора (>0 аргументов)
.It Ic \&Lk Ta гиперссылка: Ar uri Op Ar display_name
.It Ic \&Mt Ta Do mailto Dc гиперссылка: Ar localpart Ns @ Ns Ar domain
.It Ic \&Cd Ta объявление конфигурации ядра (>0 аргументов)
.It Ic \&Ad Ta адрес памяти (>0 аргументов)
.It Ic \&Ms Ta математический символ (>0 аргументов)
.El
.Ss Физическая разметка
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Em Ta курсивный шрифт или подчеркивание (выделение) (>0 аргументов)
.It Ic \&Sy Ta полужирный шрифт (символьный) (>0 аргументов)
.It Ic \&No Ta возврат к латинскому шрифту (нормальный) (>0 аргументов)
.It Ic \&Bf , \&Ef Ta шрифтовой блок: Fl Ar type | Cm \&Em | \&Li | \&Sy
.El
.Ss Физические корпуса
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Dq , \&Do , \&Dc Ta заключить в типографские двойные кавычки: Текст Dq
.It Ic \&Qq , \&Qo , \&Qc Ta заключить в типографские двойные кавычки: Qq текст
.It Ic \&Sq , \&So , \&Sc Ta заключить в одинарные кавычки: Sq текст
.It Ic \&Pq , \&Po , \&Pc Ta заключить в круглые скобки: Pq текст
.It Ic \&Bq , \&Bo , \&Bc Ta заключить в квадратные скобки: Bq текст
.It Ic \&Brq , \&Bro , \&Brc Ta заключить в фигурные скобки: Brq текст
.It Ic \&Aq , \&Ao , \&Ac Ta заключить в угловые скобки: Aq текст
.It Ic \&Eo , \&Ec Ta общий корпус
.El
.Ss Текстовая продукция
.Bl -колонка "Brq, Bro, Brc" описание
.It Ic \&Ex Fl std Ta стандартные значения выхода команд: Op Ar утилита…
.It Ic \&Rv Fl std Ta стандартные значения возврата функции: Op Ar функция ...
.It Ic \&St Ta ссылка на документ стандартов (один аргумент)
.It Ic \&At Ta At
.It Ic \&Bx Ta Bx
.It Ic \&Bsx Ta Bsx
.It Ic \&Nx Ta Nx
.It Ic \&Fx Ta Fx
.It Ic \&Ox Ta Ox
.It Ic \&Dx Ta Dx
.El
.Sh ССЫЛКА НА МАКРОСЫ
Этот раздел представляет собой канонический справочник всех макросов, расположенных
в алфавитном порядке.
О масштабировании отдельных макросов см.
.Sx СИНТАКС МАКРОСА .
.Bl -tag -width 3n
.It Ic \&%A Ar first_name ... last_name
Имя автора
.Ic \&Rs
блок.
Нескольким авторам должен быть предоставлен свой собственный
.Ic \%%A
строка.
Имена авторов должны быть расположены в порядке, когда полное или сокращенное имя (имена)
первой, затем полная фамилия.
.It Ic \&%B Ar title
Название книги
.Ic \&Rs
блок.
Этот макрос также может использоваться в небиблиографическом контексте, когда
когда речь идет о названиях книг.
.It Ic \&%C Ar location
Город публикации или местоположение
.Ic \&Rs
блока.
.It Ic \&%D Oo Ar месяц день , Oc Ar год
Дата публикации блока
.Ic \&Rs
блока.
Укажите полное английское название
месяц .Ar
и все четыре цифры
.Ar года.
.It Ic \&%I Ar имя
Название издателя или эмитента
.Ic \&Rs
блок.
.It Ic \&%J Ар название
Название журнала
.Ic \&Rs
блок.
.It Ic \&%N Ar номер
Номер выпуска (обычно для журналов) блока
.Ic \&Rs
блока.
.It Ic \&%O Ar строка
Дополнительная информация блока
.Ic \&Rs
блока.
.It Ic \&%P Ар номер
Номер страницы книги или журнала
.Ic \&Rs
блока.
Обычно аргумент начинается с
.Ql p.\&
для одной страницы или
.Ql pp.\&
для диапазона страниц, например:
.Pp
.Dl .%P pp. 42\e(en47
.It Ic \&%Q Ар имя
Институциональный автор (школа, правительство и т.д.)
.Ic \&Rs
блока.
Нескольким институциональным авторам должен быть присвоен свой собственный
.Ic \&%Q
строка.
.It Ic \&%R Ar имя
Название технического отчета
.Ic \&Rs
блок.
.It Ic \&%T Ar title
Заголовок статьи в блоке
.Ic \&Rs
блока.
Этот макрос также может использоваться в небиблиографическом контексте при
когда речь идет о названиях статей.
.It Ic \&%U Ar protocol Ns :// Ns Ar path
URI ссылочного документа.
.It Ic \&%V Ar номер
Номер тома
.Ic \&Rs
блок.
.It Ic \&Ac
Закрыть блок
.Ic \&Ao
блок.
Не имеет хвостовых аргументов.
.Tg Ad
.It Ic \&Ad Ar адрес
Адрес памяти.
Не используйте его для почтовых адресов.
.Pp
Примеры:
.Dl \&.Ad [0,$]
.Dl \&.Ad 0x00000000
.Tg An
.It Ic \&An Fl split | nosplit | Ar first_name ... last_name
Имя автора.
Может использоваться как для авторов программы, функции или драйвера.
документированных в руководстве, так и для авторов самого руководства.
Требуется либо имя автора, либо один из следующих аргументов:
.Pp
.Bl -tag -width "-nosplitX" -offset indent -compact
.It Fl split
Начинать новую строку вывода перед каждым последующим вызовом функции
.Ic \&An .
.It Fl nosplit
Противоположность
.Fl split .
.El
.Pp
По умолчанию
.Fl nosplit .
Эффект от выбора одного из вариантов
.Fl split
заканчивается в начале
.Em АВТОРЫ
раздел.
В
.Em АВТОРЫ
по умолчанию используется
.Fl nosplit
для первого списка авторов и
.Fl split
для всех остальных списков авторов.
.Pp
Примеры:
.Dl \&.An -nosplit
.Dl \&.An Кристапс Дзонсонс \&Aq \&Mt kristaps@bsd.lv
.It Ic \&Ao Ar блок
Начинает блок, заключенный в угловые скобки.
Не имеет головных аргументов.
Этот макрос почти никогда не бывает полезен.
См.
.Ic \&Aq
подробнее.
.Tg Ap
.It Ic \&Ap
Вставляет апостроф без окружающего пробельного символа.
Обычно используется как грамматический прием, когда речь идет о глагольной
функции.
.Pp
Примеры:
.Dl \&.Fn execve \&Ap d
.Tg Aq
.It Ic \&Aq Ar строка
Заключите остальную часть строки ввода в угловые скобки.
Единственный важный вариант использования - это адреса электронной почты.
См.
.Ic \&Mt
для примера.
.Pp
Иногда используется для имен символов и клавиш, например:
.Bd - литерал - смещение отступа
Нажмите кнопку
\&.Aq побег
ключ к ...
.Ed
.Pp
Для URI используйте
.Ic \&Lk
вместо этого, и
.Ic \&In
для
.Dq #include
директивы.
Никогда не оборачивайте
.Ic \&Ar
в
.Ic \&Aq .
.Pp
Поскольку
.Ic \&Aq
обычно отображается с не ASCII символами в не ASCII режимах вывода,
не используйте его в тех случаях, когда ASCII-символы
.Sq <
и
.Sq >
требуются в качестве элементов синтаксиса.
Вместо этого в таких случаях используйте эти символы напрямую, сочетая их
с макросами
.Ic \&Pf ,
.Ic \&Ns ,
или
.Ic \&Eo
по мере необходимости.
.Pp
См. Также
.Ic \&Ao .
.Tg Ar
.It Ic \&Ar Op Ar ...
Аргументы команды.
Если аргумент не указан, то в качестве аргумента используется строка
.Dq файл ...\&
используется по умолчанию.
.Pp
Примеры:
.Dl ".Fl o Ar file"
.Dl ".Ar"
.Dl ".Ar arg1 , arg2 ."
.Pp
Аргументы к
.Ic \&Ar
макросы - это имена и заполнители для аргументов команд;
Для фиксированных строк, передаваемых дословно в качестве аргументов, используйте
.Ic \&Fl
или
.Ic \&Cm .
.Tg At
.It Ic \&At Op Ar version
Форматирует
.At
версию.
Принимает один необязательный аргумент:
.Pp
.Bl -tag -width "v[1-7] | 32vX" -offset indent –compact
.It Cm v[1-7] | 32v
Версия
.At .
.It Cm III
.At III .
.It Cm V | V.[1-4]
Версия
.At V .
.El
.Pp
Обратите внимание, что эти аргументы не начинаются с дефиса.
.Pp
Примеры:
.Dl \&.At
.Dl \&.At III
.Dl \&.At V.1
.Pp
См. также
.Ic \&Bsx ,
.Ic \&Bx ,
.Ic \&Dx ,
.Ic \&Fx ,
.Ic \&Nx ,
и
.Ic \&Ox .
.It Ic \&Bc
Закрыть
.Ic \&Bo
блок.
Не имеет никаких хвостовых аргументов.
.Tg Bd
.It Ic \&Bd Fl Ns Ar type Oo Fl offset Ar width Oc Op Fl compact
Начало блока отображения.
Блоки отображения используются для выбора отступа и
отступа и обоснования, отличных от тех, что используются в окружающем тексте.
Они могут содержать как строки макросов, так и строки текста.
По умолчанию перед блоком отображения ставится вертикальный пробел.
.Pp
Тип
тип .Ar
должен быть одним из следующих:
.Bl -tag -width 13n -offset отступ
.It Fl выровнять по центру
Создает одну выходную строку из каждой входной строки и выравнивает каждую строку по центру.
Использовать этот тип отображения не рекомендуется; многие
.Nm
плохо отображают его.
.It Fl filled
Измените положение переносов строк, чтобы заполнить каждую строку, и выровняйте полученный блок по левому и
выравнивайте полученный блок по правому краю.
.It Fl литерал
Создать одну выходную строку из каждой входной строки,
и не выравнивает блок.
Сохраняйте белое пространство в том виде, в котором оно присутствует во входных данных.
Всегда используйте шрифт постоянной ширины.
Используется для отображения исходного кода.
.It Fl ragged
Измените положение переносов строк, чтобы заполнить каждую строку, и выровняйте по левому краю
полученный блок.
.It Fl незаполненный
То же самое, что
.Fl литерал ,
но используется тот же шрифт, что и для обычного текста, то есть шрифт переменной ширины
если это поддерживается устройством вывода.
.El
.Pp
Тип
тип .Ar
должен быть указан первым.
После этого могут следовать дополнительные аргументы:
.Bl -tag -width 13n -offset отступ
.It Fl смещение Ar ширина
Отступ от экрана на величину
.Ar width ,
которая может быть одной из следующих:
.Bl –item
.It
Одна из предопределенных строк
.Cm отступ ,
ширина стандартного отступа (шесть символов постоянной ширины);
.Cm отступ-два ,
дважды
.Cm отступ ;
.Cm left ,
не имеет эффекта;
.Cm правый ,
который выравнивает по правому краю; или
.Cm центр ,
которая выравнивается вокруг воображаемой центральной оси.
.It
Вызов макроса, при котором выбирается предопределенная ширина
связанную с этим макросом.
Наиболее популярным является макрос воображаемой ширины
.Ar \&Ds ,
который разрешается в
.Sy 6n .
.It
Ширина масштабирования, как описано в
.Xr roff 7 .
.It
Произвольная строка, отступ от которой равен длине этой строки.
.El
.Pp
Когда аргумент отсутствует,
смещение .Fl
игнорируется.
.It Fl компактный
Не выделяйте вертикальное пространство перед дисплеем.
.El
.Pp
Примеры:
.Bd -literal -offset отступ
\&.Bd \-literal \-offset отступ \-compact
   Здравствуй мир.
\&.Ed
.Ed
.Pp
See also
.Ic \&D1
and
.Ic \&Dl .
.Tg Bf
.It Ic \&Bf Fl emphasis | literal | symbolic | Cm \&Em | \&Li | \&Sy
Изменение режима шрифта для выделенного блока текста.
The
.Fl подчеркивание
и
.Cm \&Em
эквивалентны, как и
.Fl символический
и
.Cm \&Sy ,
и
.Fl литерал
и
.Cm \&Li .
Без аргумента этот макрос ничего не делает.
Режим шрифта продолжается до тех пор, пока не будет нарушен новым режимом шрифта во вложенной
области видимости или
.Ic \&Ef
встречается.
.Pp
См. также
.Ic \&Li ,
.Ic \&Ef ,
.Ic \&Em ,
и
.Ic \&Sy .
.Tg Bk
.It Ic \&Bk Fl слова
Для каждого макроса сохраняйте его вывод в одной выходной строке,
пока не будет достигнут конец макроса или конец строки ввода,
в зависимости от того, что наступит раньше.
Разрывы строк в текстовых строках не затрагиваются.
.Pp
The
.Fl слова
является обязательным; дополнительные аргументы игнорируются.
.Pp
Следующий пример не будет разбиваться на части
.Ic \&Op
строки макроса:
.Bd -literal -offset indent
\&.Bk \-слова
\&.Op Fl f Ar флаги
\&.Op Fl o Ar вывод
\&.Ek
.Ed
.Pp
Будьте осторожны, используя слишком длинные строки в блоке keep!
Это приведет к повреждению правого поля.
.Tg Bl
.It Xo
.Ic \&Bl
.Fl Ns Ar тип
.Op Fl ширина Ar val
.Op Fl смещение Ar val
.Op Fl компактный
.Op Ar col ...
.Xc
Начало списка.
Списки состоят из элементов, указанных с помощью
.Ic \&It
содержащие голову, тело или оба элемента.
.Pp
список
тип .Ar
является обязательным и должен быть указан первым.
The
Ширина .Fl
и
.Fl смещение
Аргументы принимают имена макросов, как описано для
.Ic \&Bd
.Fl смещение ,
ширины масштабирования, как описано в
.Xr roff 7 ,
или использовать длину заданной строки.
The
.Fl смещение
это глобальный отступ для всего списка, влияющий как на головки элементов
и тела.
Для тех типов списков, которые его поддерживают, значение
ширина .Fl
задает дополнительный отступ для тел элементов,
который будет добавлен к
.Fl смещение.
Если не задан аргумент
.Fl компактный
аргумент .Fl compact не указан, элементы списка разделяются вертикальным пробелом.
.Pp
В списке должен быть указан один из следующих типов списков:
.Bl -tag -ширина 12n -отступ
.It Fl заглавная буква
Заголовки элементов можно не указывать, но в начале каждого элемента будет напечатана заглавная буква
каждого элемента.
Тела элементов начинаются в той же строке, что и заглавная буква
и имеют отступ в соответствии с параметром
ширина .Fl
аргумента.
.It Fl колонка
Список с колонками.
The
.Fl Ширина
не влияет; вместо этого длина строки каждого аргумента
задает ширину одного столбца.
Если первая строка тела колонки
.Fl столбца
не является
.Ic \&It
строкой макроса,
.Ic \&It
контексты, охватывающие по одной строке ввода, подразумеваются до тех пор, пока не появится
Встречается строка .Ic \&Itmacro, после чего элементы начинают интерпретироваться как
описанные в
.Ic \&It
документации.
.It Fl тире
Как
.Fl заглавная буква ,
за исключением того, что вместо заглавных букв используются тире.
.It Fl диаграмма
Как.Fl inset ,
за исключением того, что заголовки элементов не анализируются при вызове макросов.
Чаще всего используется в
.Em ДИАГНОСТИКА
с константами ошибок в заголовках элементов.
.It Fl Перечисление
Нумерованный список.
Заголовки элементов могут быть не указаны.
Форматируется как
.Fl заглавная буква
за исключением того, что вместо заглавных букв используются кардинальные числа,
начиная с 1.
.It Fl подвесить
Например,
.Fl тег ,
за исключением того, что первые строки тел пунктов не отступают, а следуют за
за заголовками элементов, как в
.Fl вставка
списки.
.It Fl дефис
Синоним
.Fl тире .
.It Fl вставка
Тексты элементов следуют за заголовками элементов на одной строке с использованием обычного межсловного
интервал между словами.
Тела не имеют отступов, а ширина
.Fl ширина
игнорируется.
.It Fl элемент
Заголовки элементов не могут быть указаны, и они не печатаются.
Тела не имеют отступов, а ширина
.Fl ширина
игнорируется.
.It Fl ohang
Тела элементов начинаются со строки, следующей за головками элементов, и не имеют отступов.
Параметр
.Fl ширина
игнорируется.
.It Fl Тег
Отступы между телами элементов определяются в соответствии с
.Fl ширина
аргумента.
Если заголовок элемента помещается в отступ, тело элемента следует за ним
на той же строке вывода.
В противном случае тело начинается на следующей за заголовком строке.
.El
.Pp
Списки могут быть вложены в списки и дисплеи.
Вложенность
.Fl колонка
и
.Fl перечисления
не может быть переносимым.
.Pp
См. также
.Ic \&El
и
.Ic \&It .
.It Ic \&Bo Ar блок
Начинает блок, заключенный в квадратные скобки.
Не имеет головных аргументов.
.Pp
Примеры:
.Bd  -литеральный -смещение отступа -компактный
\&.Bo 1 ,
\&.Dv BUFSIZ \&Bc
.Ed
.Pp
См. также
.Ic \&Bq .
.Tg Bq
.It Ic \&Bq Ar Линия
Заключает свои аргументы в квадратные скобки.
.Pp
Примеры:
.Dl \&.Bq 1 , \&Dv BUFSIZ
.Pp
.Em Замечания :
этим макросом иногда злоупотребляют для эмуляции необязательных аргументов для
команд; правильные макросы для этой цели следующие
.Ic \&Op ,
.Ic \&Oo ,
и
.Ic \&Oc .
.Pp
См. Также
.Ic \&Bo .
.It Ic \&Brc
Закрыть
.Ic \&Bro
блок.
Не имеет хвостовых аргументов.
Блок .It Ic \&Bro Ar
Начало блока, заключенного в фигурные скобки.
Не имеет головных аргументов.
.Pp
Примеры:
.Bd -литеральный -смещение отступа -компактный
\&.Bro 1 , ... ,
\&.Va n \&Brc
.Ed
.Pp
См. также
.Ic \&Brq .
.Tg Brq
.It Ic \&Brq Ar строка
Заключает свои аргументы в фигурные скобки.
.Pp
Примеры:
.Dl \&.Brq 1 , ... , \&Va n
.Pp
См. также
.Ic \&Bro .
.Tg Bsx
.It Ic \&Bsx Op Ar версия
Отформатировать
.Bsx
версия, указанная в качестве аргумента, или значение по умолчанию, если
аргумент не указан.
.Pp
Примеры:
.Dl \&.Bsx 1.0
.Dl \&.Bsx
.Pp
См. Также
.Ic \&At ,
.Ic \&Bx ,
.Ic \&Dx ,
.Ic \&Fx ,
.Ic \&Nx ,
и
.Ic \&Ox .
.It Ic \&Bt
Поддерживается только для совместимости, не используйте его в новых руководствах.
Печатает
.Dq в настоящее время находится в стадии бета-тестирования.
.Tg Bx
.It Ic \&Bx Op Ar version Op Ar variant
Форматировать
.Bx
версию, указанную в качестве аргумента, или значение по умолчанию, если аргумент не указан.
если аргумент не указан.
.Pp
Примеры:
.Dl \&.Bx 4.3 Tahoe
.Dl \&.Bx 4.4
.Dl \&.Bx
.Pp
См. также
.Ic \&At ,
.Ic \&Bsx ,
.Ic \&Dx ,
.Ic \&Fx ,
.Ic \&Nx ,
и
.Ic \&Ox .
.Tg Cd
.It Ic \&Cd Ar Линия
Объявление конфигурации ядра.
Обозначает строки, принимаемые
.Xr config 8 .
Чаще всего используется на страницах руководства раздела 4.
.Pp
Примеры:
.Dl \&.Cd устройство le0 at scode?
.Pp
.Em Замечания :
этим макросом часто злоупотребляют, используя литералы в кавычках для сохранения
пробельных символов и выравнивания последовательных символов
.Ic \&Cd
деклараций.
Такая практика не рекомендуется.
.Tg Cm
.It Ic \&Cm Ar ключевое слово ...
Модификаторы команд.
Обычно используются для фиксированных строк, передаваемых в качестве аргументов интерактивным
команд, команд в интерпретируемых сценариях или директив конфигурационного файла.
директивы файла конфигурации, если только
.Ic \&Fl
является более подходящим.
.Pp
Примеры:
.Dl ".Nm mt Fl f Ar устройства Cm перемотки"
.Dl ".Nm ps Fl o Cm pid , Ns Cm команда"
.Dl ".Nm dd Cm if= Ns Ar file1 Cm of= Ns Ar file2"
.Dl ".Ic set Fl o Cm vi"
.Dl ".Ic поиск Cm file bind"
.Dl ".Ic разрешить Ar идентичность Op Cm как Ar цель"
.Tg D1
.It Ic \&D1 Ar line
Отображение с отступом в одну строку.
Форматируется по правилам, принятым по умолчанию, и удобен для простых отступов
утверждений.
За ней следует новая строка.
.Pp
Примеры:
.Dl \&.D1 \&Fl abcdefgh
.Pp
См. также
.Ic \&Bd
и
.Ic \&Dl .
.It Ic \&Db
Этот макрос устарел.
Замена ему не требуется.
Он игнорируется
.Xr mandoc 1
и команду groff, включая ее аргументы.
Ранее использовалась для переключения режима отладки.
.It Ic \&Dc
Закрыть
.Ic \&Do
блок.
Не имеет хвостовых аргументов.
.Tg Dd
.It Ic \&Dd Cm $\&Mdocdate$ | Ar месяц день , год
Дата документа для отображения в нижнем колонтитуле страницы,
по условию - дата последнего изменения.
Это обязательный первый макрос любого
.Nm
руководства.
.Pp
The
Месяц .Ar
это полное английское название месяца, а
день .Ar
это целое число, а
.Ar год
полный четырехзначный год.
.Pp
Другие аргументы не переносятся; аргумент
.Xr mandoc 1
обрабатывает их следующим образом:
.Bl -dash --смещение 3n –компактный
.It
Чтобы дата автоматически заполнялась программой
.Ox
версия
.Xr cvs 1 ,
специальная строка
.Dq $\&Mdocdate$
может быть указана в качестве аргумента.
.It
Традиционный, чисто числовой
.Xr man 7
Формат
.Ar год Ns \(en Ns Ar месяц Ns \(en Ns Ar день
тоже принимается.
.It
Если строка даты не может быть разобрана, она используется дословно.
.It
Если строка даты не задана, используется текущая дата.
.El
.Pp
Примеры:
.Dl \&.Dd $\&Mdocdate$
.Dl \&.Dd $\&Mdocdate: 2 июля 2018$
.Dl \&.Dd 2 июля 2018 г.
.Pp
См. также
.Ic \&Dt
и
.Ic \&Os .
.Tg Dl
.It Ic \&Dl Ar строка
Отображение с отступом в одну строку.
Форматируется как буквальный текст и полезен для команд и
вызовов.
За ней следует новая строка.
.Pp
Примеры:
.Dl \&.Dl % mandoc mdoc.7 \e(ba less
.Pp
См. также
.Ic \&Ql ,
.Ic \&Bd Fl литерал ,
и
.Ic \&D1 .
.It Ic \&Do Ar блок
Начинает блок, заключенный в двойные кавычки.
Не имеет головных аргументов.
.Pp
Примеры:
.Bd -литеральный -смещение отступа -компактный
\&.Do
Апрель - самый жестокий месяц
\&.Dc
\e(em Т.С. Элиот
.Ed
.Pp
См. Также
.Ic \&Dq .
.Tg Dq
.It Ic \&Dq Строка
Заключает свои аргументы в
.Dq типографские
двойные кавычки.
.Pp
Примеры:
.Bd -литеральный -смещение отступа -компактный
\&.Dq Апрель - самый жестокий месяц
\e(em Т.С. Элиот
.Ed
.Pp
См. также
.Ic \&Qq ,
.Ic \&Sq ,
и
.Ic \&Do .
.Tg Dt
.It Ic \&Dt Ar TITLE раздел Op Ar arch
Заголовок документа для отображения в заголовке страницы.
Это обязательный второй макрос любого
.Nm
файла.
.Pp
Его аргументы следующие:
.Bl -тег -ширина секции -смещение 2n
.It Ar ТИТУЛ
Заголовок (имя) документа, по умолчанию
.Dq БЕЗ УКАЗАНИЯ
если не указано.
Чтобы добиться единообразия внешнего вида линий заголовков страниц,
по общему правилу он должен быть прописным.
.It Ar раздел
Раздел руководства.
Это может быть один из
.Cm 1
.Pq Общие команды ,
.Cm 2
.Pq Системные вызовы ,
.Cm 3
.Pq Библиотечные функции ,
.Cm 3p
.Pq Perl Библиотека,
.Cm 4
.Pq Драйверы устройств ,
.Cm 5
.Pq Форматы файлов,
.Cm 6
.Pq Игры ,
.Cm 7
.Pq Различная информация ,
.Cm 8
.Pq Руководство системного менеджера ,
или
.Cm 9
.Pq Руководство разработчика ядра.
Он должен соответствовать суффиксу имени файла руководства и по умолчанию равен
пустой строке, если она не указана.
.It Ar arch
Здесь указывается архитектура машины, к которой относится страница руководства,
где это уместно, например
.Cm alpha ,
.Cm amd64 ,
.Cm i386 ,
или
.Cm sparc64 .
Список допустимых архитектур зависит от операционной системы.
.El
.Pp
Примеры:
.Dl \&.Dt FOO 1
.Dl \&.Dt FOO 9 i386
.Pp
См. также
.Ic \&Dd
и
.Ic \&Os .
.Tg Dv
.It Ic \&Dv Ar идентификатор ...
Определенные переменные, такие как константы препроцессора, символы констант,
значения перечислений и так далее.
.Pp
Примеры:
.Dl \&.Dv NULL
.Dl \&.Dv BUFSIZ
.Dl \&.Dv STDOUT_FILENO
.Pp
См. Также
.Ic \&Er
и
.Ic \&Ev
для констант специального назначения,
.Ic \&Va
для символов переменных, и
.Ic \&Fd
для перечисления определений переменных препроцессора в файле
.Em СИНОПСИС .
.Tg Dx
.It Ic \&Dx Версия Op Ar
Форматировать
.Dx
версия, указанная в качестве аргумента, или значение по умолчанию
если аргумент не указан.
.Pp
Примеры:
.Dl \&.Dx 2.4.1
.Dl \&.Dx
.Pp
См. также
.Ic \&At ,
.Ic \&Bsx ,
.Ic \&Bx ,
.Ic \&Fx ,
.Ic \&Nx ,
и
.Ic \&Ox .
.It Ic \&Ec Op Ar closing_delimiter
Закрыть область, начатую
.Ic \&Eo .
.Pp
The
.Ar закрывающий_делимитер
используется в качестве хвоста закрытия, например, указание \e(rq
будет эмулировать
.Ic \&Dc .
.It Ic \&Ed
Завершить контекст отображения, начатый командой
.Ic \&Bd .
.It Ic \&Ef
Завершить контекст режима шрифта, запущенный командой
.Ic \&Bf .
.It Ic \&Ek
Завершить контекст сохранения, начатый командой
.Ic \&Bk .
.It Ic \&El
Завершить контекст списка, начатый
.Ic \&Bl .
См. также
.Ic \&It .
.Tg Em
.It Ic \&Em Ar слово ...
Запросите курсивный шрифт.
Если устройство вывода не обеспечивает этого, подчеркните.
.Pp
Чаще всего используется для подчеркивания (не путать с
важностью, см.
.Ic \&Sy ).
В редких случаях, когда не подходит ни один из макросов семантической разметки,
он также может быть использован для технических терминов и заполнителей, за исключением того, что
для элементов синтаксиса,
.Ic \&Sy
b
.Ic \&Ar
предпочтительнее, соответственно.
.Pp
Примеры:
.Bd -литеральный -компактный -смещенный отступ
Выбираются строки, которые
\&.Em, не
не соответствующие ни одному из указанных шаблонов.
Некоторые функции используют
\&.Em удерживать место
чтобы сохранить место для шаблона для последующего извлечения.
.Ed
.Pp
См. также
.Ic \&No ,
.Ic \&Ql ,
И
.Ic \&Sy .
.It Ic \&En Ar word ...
Этот макрос устарел.
Используйте
.Ic \&Eo
или любой другой макрос для корпуса.
.Pp
Заключает свой аргумент в разделители, указанные последним макросом
.Ic \&Es
макросом.
.Tg Eo
.It Ic \&Eo Op Ar открывающий_разделитель
Произвольный разделитель.
Макрос
.Ar открывающий_разделитель
используется в качестве заголовка корпуса, например, указание \e(lq
будет эмулировать
.Ic \&Do .
.Tg Er
.It Ic \&Er Ar идентификатор ...
Константы ошибок для определений
.Va errno
глобальной переменной libc.
Чаще всего используется на страницах руководств разделов 2 и 3.
.Pp
Примеры:
.Dl \&.Er EPERM
.Dl \&.Er ENOENT
.Pp
См. Также
.Ic \&Dv
для общих констант.
.It Ic \&Es Ar открывающий_делимитер закрывающий_делимитер
Этот макрос устарел.
Используйте
.Ic \&Eo
или любой другой макрос для вложений.
.Pp
Принимает два аргумента, определяющих разделители, которые будут использоваться последующими макросами
.Ic \&En
макросами.
.Tg Ev
.It Ic \&Ev Ar идентификатор ...
Переменные среды, например, указанные в
.Xr environ 7 .
.Pp
Примеры:
.Dl \&.Ev ДИСПЛЕЙ
.Dl \&.Ev PATH
.Pp
См. также
.Ic \&Dv
для общих констант.
.Tg Ex
.It Ic \&Ex Fl std Op Ar утилита ...
Вставьте стандартное предложение, касающееся значений выхода команды, равных 0 при успехе
и >0 при неудаче.
Чаще всего это используется на страницах руководств разделов 1, 6 и 8.
.Pp
Если
утилита .Ar
не указана, то имя документа, заданное
.Ic \&Nm
используется.
Несколько
.Ar аргументов утилиты
рассматриваются как отдельные утилиты.
.Pp
См. также
.Ic \&Rv .
.Tg Fa
.It Ic \&Fa Аргумент ...
Аргумент или параметр функции.
Каждый аргумент может быть именем и типом (рекомендуется для
.Em СИНОПСИС
раздела), только имя (для вызовов функций),
или только тип (для прототипов функций).
Если указаны и тип, и имя, или если тип состоит из нескольких слов
слов, то все слова, принадлежащие одному аргументу функции, должны быть
все слова, принадлежащие одному аргументу функции, должны быть указаны в одном аргументе
.Ic \&Fa
макрос.
.Pp
Этот макрос также используется для указания имени поля структуры.
.Pp
Чаще всего используется макрос
.Ic \&Fa
используется в
.Em СИНОПСИС
на веб-сайте
.Ic \&Fo
при документировании многострочных прототипов функций.
Если функция вызывается с несколькими аргументами, то аргументы разделяются
запятой.
Кроме того, если следующий макрос является другим
.Ic \&Fa ,
последний аргумент также будет содержать запятую в конце.
.Pp
Примеры:
.Dl \&.Fa \(dqconst char *p\(dq
.Dl \&.Fa \(dqint a\(dq \(dqint b\(dq \(dqint c\(dq
.Dl \&.Fa \(dqchar *\(dq size_t
.Pp
См. также
.Ic \&Fo .
.It Ic \&Fc
Завершить контекст функции, начатый
.Ic \&Fo .
.Tg Fd
.It Ic \&Fd Pf # Ar директива Op Ar аргумент ...
Директива препроцессора, в частности, для перечисления в
.Em СИНОПСИС .
Исторически она также использовалась для документирования включаемых файлов.
Последнее использование было отменено в пользу
.Ic \&In .
.Pp
Примеры:
.Dl \&.Fd #define sa_handler __sigaction_u.__sa_handler
.Dl \&.Fd #define SIO_MAXNFDS
.Dl \&.Fd #ifdef FS_DEBUG
.Dl \&.Ft пустое место
.Dl \&.Fn dbg_open \(dqconst char *\(dq
.Dl \&.Fd #endif
.Pp
См. также
.Sx СТРУКТУРА РУКОВОДСТВА ,
.Ic \&In ,
и
.Ic \&Dv .
.Tg Fl
.It Ic \&Fl Op Ar word ...
Флаг командной строки или опция.
Используется при перечислении аргументов для утилит командной строки.
Для каждого аргумента печатается ASCII символ дефиса-минуса
.Sq \- ,
сразу после аргумента.
Если аргументы не указаны, то после пробела печатается дефис-минус.
Если аргумент является макросом, дефис-минус ставится перед
к последующему выводу макроса.
.Pp
Примеры:
.Dl ".Nm du Op Fl H | L | P"
.Dl ".Nm ls Op Fl 1AaCcdFfgHhikLlmnopqRrSsTtux"
.Dl ".Nm route Cm add Fl inet Ar шлюз назначения"
.Dl ".Nm locate.updatedb Op Fl \e-fcodes Ns = Ns Ar dbfile"
.Dl ".Nm aucat Fl o Fl"
.Dl ".Nm kill Fl Ar signal_number"
.Pp
Для длинных опций GNU-sytle экранирование дополнительного дефиса-минуса не является
строго не требуется, но может быть безопаснее в будущих версиях GNU troff;
 см.
.Xr mandoc_char 7
для деталей.
.Pp
См. также
.Ic \&Cm .
.Tg Fn
.It Ic \&Fn Ar название функции Op Ar аргумент ...
Имя функции.
.Pp
Аргументы функции заключаются в круглые скобки и
разделены запятыми.
Если аргументы не указаны, выводятся пустые круглые скобки.
В
.Em СИНОПСИС
этот макрос начинает новую строку вывода,
а между определениями функций автоматически вставляется пустая строка.
.Pp
Примеры:
.Dl \&.Fn \(dqint funcname\(dq \(dqint arg0\(dq \(dqint arg1\(dq
.Dl \&.Fn funcname \(dqint arg0\(dq
.Dl \&.Fn funcname arg0
.Bd -литеральный -смещение отступа
\&.Ft функциональный тип
\&.Fn имя функции
.Ed
.Pp
При ссылке на функцию, задокументированную на другой странице руководства, используйте
.Ic \&Xr
вместо этого.
См. также
.Sx СТРУКТУРА РУКОВОДСТВА ,
.Ic \&Fo ,
и
.Ic \&Ft .
.Tg Fo
.It Ic \&Fo Ar имя функции
Начало функционального блока.
Это многострочная версия
.Ic \&Fn .
.Pp
Обычно вызывается в следующем контексте:
.Bd -ragged -offset indent
.Pf \. Ic \&Ft Ar функциональный тип
.br
.Pf \. Ic \&Fo Ar имя функции
.br
.Pf \. Ic \&Fa Qq Ar argtype Ar argname
.br
\&.\.\.
.br
.Pf \. Ic \&Fc
.Ed
.Pp
A
.Ic \&Fo
объем закрыт
.Ic \&Fc .
.Pp
См. также
.Sx СТРУКТУРА РУКОВОДСТВА ,
.Ic \&Fa ,
.Ic \&Fc ,
и
.Ic \&Ft .
.It Ic \&Fr Ar номер
Этот макрос устарел.
Заменять его разметкой не нужно.
.Pp
Он использовался для отображения возвращаемых значений числовых функций курсивным шрифтом.
.Tg Ft
.It Ic \&Ft Ar Функциональный тип
Тип функции.
.Pp
В
.Em СИНОПСИС
после этого макроса начинается новая строка вывода.
.Pp
Примеры:
.Dl \&.Ft int
.Bd -литеральный -смещение отступа -компактный
\&.Ft функциональный тип
\&.Fn имя функции
.Ed
.Pp
См. также
.Sx СТРУКТУРА РУКОВОДСТВА ,
.Ic \&Fn ,
и
.Ic \&Fo .
.Tg Fx
.It Ic \&Fx Op Ar версия
Форматировать
.Fx
версию, указанную в качестве аргумента, или значение по умолчанию
если аргумент не указан.
.Pp
Примеры:
.Dl \&.Fx 7.1
.Dl \&.Fx
.Pp
См. также
.Ic \&At ,
.Ic \&Bsx ,
.Ic \&Bx ,
.Ic \&Dx ,
.Ic \&Nx ,
И
.Ic \&Ox .
.It Ic \&Hf Ar имя файла
Этот макрос не реализован в
.Xr mandoc 1 .
Он использовался для включения содержимого (заголовочного) файла в буквальном смысле.
.Tg Ic
.It Ic \&Ic Ar ключевое слово ...
Внутренняя или интерактивная команда, или инструкция конфигурации
в конфигурационном файле.
См. Также
.Ic \&Cm .
.Pp
Примеры:
.Dl \&.Ic :wq
.Dl \&.Ic hash
.Dl \&.Ic псевдоним
.Pp
Обратите внимание, что использование
.Ic \&Ql ,
.Ic \&Dl ,
или
.Ic \&Bd Fl литерал
предпочтительнее для отображения примеров кода; при этом
.Ic \&Ic
Макрос используется при обращении к имени отдельной команды.
.Tg In
.It Ic \&In Ar имя файла
Имя включаемого файла.
Этот макрос чаще всего используется на страницах руководств разделов 2, 3 и 9.
.Pp
Вызывается в качестве первого макроса в строке ввода в файле
.Em СИНОПСИС
В разделе аргумент отображается в угловых скобках
и предваряется
.Qq #include ,
и перед ним вставляется пустая строка, если перед ним есть предшествующая строка
объявление функции.
В других разделах он только заключает свой аргумент в угловые скобки
и не приводит к переносу строки.
.Pp
Примеры:
.Dl \&.In sys/types.h
.Pp
См. также
.Sx СТРУКТУРА РУКОВОДСТВА .
.Tg It
.It Ic \&It Op Ar голова
Элемент списка.
Синтаксис этого макроса зависит от типа списка.
.Pp
Списки
типа
.Fl hang ,
.Fl ohang ,
.Fl вставка ,
и
.Fl диаграмма
имеют следующий синтаксис:
.Pp
.D1 Pf \. Ic \&It Ar args
.Pp
Списки типов
.Fl заглавная буква ,
.Fl тире ,
.Fl перечисление ,
.Fl дефис
и
.Fl элемент
имеют следующий синтаксис:
.Pp
.D1 Pf \. Ic \&It
.Pp
с последующими строками, интерпретируемыми в рамках
.Ic \&It
до тех пор, пока либо закрывающий
.Ic \&El
или другого
.Ic \&It .
.Pp
Метка
.Fl тег
имеет следующий синтаксис:
.Pp
.D1 Pf \. Ic \&It Op Cm args
.Pp
Последующие строки интерпретируются как
заглавная буква
и семейство.
Аргументы строки соответствуют левой части списка; аргументы тела
аргументы соответствуют содержимому списка.
.Pp
Колонка
.Fl столбец
является самым сложным.
Его синтаксис выглядит следующим образом:
.Pp
.D1 Pf \. Ic \&It Ar cell Op Ic \&Ta Ar cell ...
.D1 Pf \. Ic \&It Ar cell Op <TAB> Ar cell ...
.Pp
Аргументы состоят из одной или нескольких строк текста и макросов
представляющих собой полную строку таблицы.
Ячейки в строке разграничиваются специальным символом
.Ic \&Ta
или буквальными символами табуляции.
.Pp
Настоятельно не рекомендуется использовать литеральные табуляции, поскольку их очень
трудно использовать правильно и
.Nm
код, использующий их, очень трудно читать.
В частности, синтаксически значимым является пустой символ
до и после буквального символа табуляции.
Если слово предшествует или следует за табуляцией без промежуточного пробела,
это слово никогда не интерпретируется как вызов макроса, а всегда выводится
буквально.
.Pp
Разделитель ячеек табуляцией может использоваться только в пределах
.Ic \&It
сама строка; в последующих строках - только
.Ic \&Ta
можно использовать только макрос для разделения ячеек, а переносимость требует, чтобы
.Ic \&Ta
вызывался другими макросами: некоторые синтаксические анализаторы не распознают его, когда
когда он появляется в качестве первого макроса в строке.
.Pp
Обратите внимание, что строки в кавычках могут охватывать ячейки с разделителем табуляции в макросе
.Ic \&It
строке.
Например,
.Pp
.Dl .It \(dqcol1 ,\& <TAB> col2 ,\(dq \&;
.Pp
сохранит пробельные символы перед обеими запятыми,
но не пробел перед точкой с запятой.
.Pp
См. также
.Ic \&Bl .
.Tg Lb
.It Ic \&Lb Cm lib Ns Ar имя
Укажите библиотеку.
.Pp
The
.Ar имя
Параметром может быть системная библиотека, например
.Cm z
или
.Cm pam ,
в этом случае рядом с вызовом компоновщика печатается небольшое описание библиотеки
или пользовательской библиотекой, в этом случае имя библиотеки печатается
печатается в кавычках.
Чаще всего это используется в
.Em SYNOPSIS
как описано в разделе
.Sx СТРУКТУРА РУКОВОДСТВА .
.Pp
Примеры:
.Dl \&.Lb libz
.Dl \&.Lb libmandoc
.Tg Li
.It Ic \&Li Ar слово ...
Запросить шрифт для печатной машинки (буквенный).
Утратил силу, поскольку на терминальных устройствах вывода он обычно
неотличим от обычного текста.
Для буквенных отображений используйте
.Ic \&Ql Pq в линию ,
.Ic \&Dl Pq однострочный ,
или
.Ic \&Bd Fl литера Pq многострочный
вместо.
.Tg Lk
.It Ic \&Lk Ar uri Op Ar display_name
Форматирование гиперссылки.
.Pp
Примеры:
.Dl \&.Lk https://bsd.lv \(dqThe BSD.lv\(dq
.Dl \&.Lk https://bsd.lv
.Pp
См. также
.Ic \&Mt .
.It Ic \&Lp
Утраченный синоним для
.Ic \&Pp .
.Tg Ms
.It Ic \&Ms Ar имя
Отображение математического символа.
.Pp
Примеры:
.Dl \&.Ms sigma
.Dl \&.Ms aleph
.Tg Mt
.It Ic \&Mt Ar локальный парт Ns @ Ns Ar домен
Формат a
.Dq почта:
гиперссылка.
.Pp
Примеры:
.Dl \&.Mt discuss@manpages.bsd.lv
.Dl \&.An Kristaps Dzonsons \&Aq \&Mt kristaps@bsd.lv
.Tg Nd
.It Ic \&Nd Строка
Описание содержания руководства в одну строку.
Это обязательный последний макрос
.Em ИМЯ
и не подходит для других разделов.
.Pp
Примеры:
.Dl Pf . Ic \&Nd mdoc языковая справка
.Dl Pf . Ic \&Nd форматирование и отображение руководств по UNIX
.Pp
The
.Ic \&Nd
Макрос технически принимает дочерние макросы и завершается с последующим
.Ic \&Sh
вызовом.
Не предполагайте такого поведения: некоторые
.Xr что такое 1
генераторы баз данных недостаточно умны, чтобы разобрать больше, чем строковые
аргументов и будут отображать макросы дословно.
.Pp
См. Также
.Ic \&Nm .
.Tg Nm
.It Ic \&Nm Op Ar наименование
Название страницы руководства или \(em, в частности, в разделе 1, 6,
и 8 страницы \(em дополнительной команды или функции, документированной в
странице руководства.
При первом вызове команды
.Ic \&Nm
Макрос ожидает единственный аргумент - имя страницы руководства.
Обычно первый вызов происходит в файле
.Em НАИМЕНОВАНИЕ
страницы.
Указанное имя будет запомнено и использовано, когда макрос будет
когда макрос будет снова вызван без аргументов на этой странице.
The
.Ic \&Nm
макрос использует
.Sx Block полностью имплицитный
семантику, когда вызывается как первый макрос в строке ввода в
.Em СИНОПСИС
; в противном случае он использует обычную
.Sx в строке
семантику.
.Pp
Примеры:
.Bd -литеральный -смещенный отступ
\&.Sh СИНОПСИС
\&.Nm кот
\&.Op Fl benstuv
\&.Op Ar
.Ed
.Pp
В
.Em СИНОПСИС
в разделах 2, 3 и 9 руководства, используйте
.Ic \&Fn
а не
.Ic \&Nm
для обозначения названия страницы руководства.
.Tg Нет
.It Ic \&No Ar слово ...
Обычный текст.
Закрывает область действия любого предшествующего встроенного макроса.
Используется после макросов физического форматирования, таких как
.Ic \&Em
или
.Ic \&Sy ,
переключает обратно на стандартное начертание и размер шрифта.
Можно также использовать для вставки строк обычного текста в строки макроса
с помощью макросов семантических аннотаций.
.Pp
Примеры:
.Dl ".Em - курсив, Sy - полужирный, No и roman".
.Bd -литеральный - смещенный отступ
\&.Sm отступ
\&.Cm :C Нет / Ar образец Нет / Ar замена Нет /
\&.Sm on
.Ed
.Pp
Смотри также
.Ic \&Em ,
.Ic \&Ql ,
и
.Ic \&Sy .
.Tg Ns
.It Ic \&Ns
Подавление пробела между выводом предыдущего макроса
и следующим текстом или макросом.
После вызова ввод интерпретируется как обычный текст
как и после
.Ic \&No
макроса.
.Pp
Не имеет эффекта, если вызывается в начале строки макроса.
.Pp
Примеры:
.Dl ".Ar имя Ns = Ns Ar значение"
.Dl ".Cm :M Ns Ar шаблон"
.Dl ".Fl o Ns Ar выход"
.Pp
Смотрите также
.Ic \&No
и
.Ic \&Sm .
.Tg Nx
.It Ic \&Nx Op Ar версия
Форматировать
.Nx
версию, указанную в качестве аргумента, или значение по умолчанию, если
аргумент не указан.
.Pp
Примеры:
.Dl \&.Nx 5.01
.Dl \&.Nx
.Pp
Смотрите также
.Ic \&At ,
.Ic \&Bsx ,
.Ic \&Bx ,
.Ic \&Dx ,
.Ic \&Fx ,
и
.Ic \&Ox .
.It Ic \&Oc
Закрыть многострочный
.Ic \&Oo
контекст.
.It Ic \&Oo Ar Блок
Многострочная версия
.Ic \&Op .
.Pp
Примеры:
.Bd -литеральный -смещение отступа -компактный
\&.Oo
\&.Op Fl флаг Ns Ar значение
\&.Oc
.Ed
.Tg Op
.It Ic \&Op Ar строка
Необязательная часть командной строки.
Выводит аргумент(ы) в скобках.
Чаще всего используется в
.Em СИНОПСИС
раздел 1 и 8 страниц руководства.
.Pp
Примеры:
.Dl \&.Op \&Fl a \&Ar b
.Dl \&.Op \&Ar a | b
.Pp
Смотрите также
.Ic \&Oo .
.Tg Os
.It Ic \&Os Op Ar система Op Ar версия
Версия операционной системы для отображения в нижнем колонтитуле страницы.
Это обязательный третий макрос в
Любого
.Nm
файл.
.Pp
Необязательный
.Ar система
указывает на соответствующую операционную систему или среду.
Рекомендуется не указывать его, в этом случае
.Xr mandoc 1
использует свою
.Fl Ios
или, если он тоже не указан,
.Fa имя системы
и
.Fa выпуск
Возвращаемые
.Xr uname 3 .
.Pp
Примеры:
.Dl \&.Os
.Dl \&.Os KTH/CSC/TCS
.Dl \&.Os BSD 4.3
.Pp
Смотрите также
.Ic \&Dd
и
.Ic \&Dt .
.It Ic \&Ot Ar функциональный тип
Этот макрос устарел.
Используйте
.Ic \&Ft
вместо него; с
.Xr mandoc 1 ,
оба имеют одинаковый эффект.
.Pp
Исторический
.Nm
пакеты описывали его как
.Dq "старый тип функции (FORTRAN)" .
.Tg Ox
.It Ic \&Ox Op Ar версия
Формат
.Ox
версию, указанную в качестве аргумента, или значение по умолчанию
если аргумент не указан.
.Pp
Примеры:
.Dl \&.Ox 4.5
.Dl \&.Ox
.Pp
Смотрите также
.Ic \&At ,
.Ic \&Bsx ,
.Ic \&Bx ,
.Ic \&Dx ,
.Ic \&Fx ,
и
.Ic \&Nx .
.Tg Pa
.It Ic \&Pa Ар имя ...
Абсолютный или относительный путь к файловой системе, либо имя файла или каталога.
Если аргумент не указан, используется символ
.Sq \(ti
используется по умолчанию.
.Pp
Примеры:
.Dl \&.Pa /usr/bin/mandoc
.Dl \&.Pa /usr/share/man/man7/mdoc.7
.Pp
Смотрите также
.Ic \&Lk .
.It Ic \&Pc
Закрытый контекст в скобках, открытый
.Ic \&Po .
.Tg Pf
.It Ic \&Pf Ar префиксный макрос Op Ar аргумент ...
Удаляет пробел между своим аргументом и следующим макросом.
Это эквивалентно:
.Pp
.D1 Ic \&No Pf \e& Ar префикс Ic \&Ns Ar макрос Op Ar аргумент ...
.Pp
The
.Ar префикс
не анализируется на предмет имен макросов или разделителей,
а используется дословно, как если бы он был экранирован.
.Pp
Примеры:
.Dl ".Pf $ Ar имя_переменной"
.Dl ".Pf . Ar имя_макроса"
.Dl ".Pf 0x Ar hex_digits"
.Pp
Смотрите также
.Ic \&Ns
и
.Ic \&Sm .
.It Ic \&Po Ар-блок
Многострочная версия
.Ic \&Pq .
.Tg Pp
.It Ic \&Pp
Разбить абзац.
Это позволит создать вертикальное пространство между предыдущим и последующим макросами
и/или текстом.
.Pp
Разрыв абзаца не требуется ни до, ни после
.Ic \&Sh
или
.Ic \&Ss
макросов или перед дисплеями
.Pq Ic \&Bd Строка
или списки
.Pq Ic \&Bl
если только не
.Fl компактный
установлен флаг.
.Tg Pq
.It Ic \&Pq Строка
Заключение в круглые скобки.
.Pp
Смотрите также
.Ic \&Po .
.It Ic \&Qc
Закрыть кавычки, открытые
.Ic \&Qo .
.Tg Ql
.It Ic \&Ql Строка
Строчное отображение литералов.
Может использоваться для полных вызовов команд и для многословных
кода, когда отступы нежелательны.
.Pp
Смотрите также
.Ic \&Dl
и
.Ic \&Bd
.Fl литерал .
.It Ic \&Qo Ar блок
Многострочная версия
.Ic \&Qq .
.Tg Qq
.It Ic \&Qq Строка
Прилагает свои аргументы в
.Qq
двойные кавычки.
Рассмотрите возможность использования
.Ic \&Dq .
.Pp
Смотрите также
.Ic \&Dq ,
.Ic \&Sq ,
и
.Ic \&Qo .
.It Ic \&Re
Закрыть
.Ic \&Rs
блок.
Не имеет хвостовых аргументов.
.Tg Rs
.It Ic \&Rs
Начать библиографический
.Pq Dq ссылка
блок.
Не имеет головных аргументов.
Макрос блока может содержать только
.Ic \&%A ,
.Ic \&%B ,
.Ic \&%C ,
.Ic \&%D ,
.Ic \&%I ,
.Ic \&%J ,
.Ic \&%N ,
.Ic \&%O ,
.Ic \&%P ,
.Ic \&%Q ,
.Ic \&%R ,
.Ic \&%T ,
.Ic \&%U ,
и
.Ic \&%V
дочерние макросы (необходимо указать хотя бы один).
.Pp
Примеры:
.Bd -литеральный -смещение отступа -компактный
\&.Rs
\&.%A Дж. Э. Хопкрофт
\&.%A Дж. Д. Ульман
\&.%B Введение в теорию автоматов, языков и вычислений
\&.%I Addison-Wesley
\&.%C Рединг, Массачусетс
\&.%D 1979
\&.Re
.Ed
.Pp
Если
.Ic \&Rs
используется в разделе Смотрите также, то перед выводом будет установлен вертикальный пробел
перед выводом на экран, иначе блок продолжается на текущей
строке.
.Tg Rv
.It Ic \&Rv Fl std Op Ar функция ...
Вставьте стандартное предложение, касающееся возврата значения функции, равного 0
при успехе и \-1 при ошибке, при этом
.Va errno
глобальной переменной libc, устанавливаемой при ошибке.
.Pp
Если
функция .Ar
не указана, то имя документа, заданное
.Ic \&Nm
используется.
Несколько
функций .Ar
рассматриваются как отдельные функции.
.Pp
Смотрите также
.Ic \&Ex .
.It Ic \&Sc
Закрыть контекст с одиночными кавычками, открытый
.Ic \&So .
.Tg Sh
.It Ic \&Sh Ar ТИТУЛЬНАЯ СТРОКА
Начало нового раздела.
Список обычных разделов руководства см.
.Sx СТРУКТУРА РУКОВОДСТВА .
Эти разделы следует использовать, если нет крайней необходимости в использовании
если нет острой необходимости в использовании других разделов.
.Pp
Названия разделов должны быть уникальными, чтобы их можно было использовать в качестве ключей
.Ic \&Sx .
Хотя этот макрос разбирается, он не должен состоять из дочерних узлов, иначе он
не может быть связан с
.Ic \&Sx .
.Pp
Смотрите также
.Ic \&Pp ,
.Ic \&Ss ,
и
.Ic \&Sx .
.Tg Sm
.It Ic \&Sm Op Cm включено | выключено
Переключает режим интервалов для вывода, созданного с помощью макросов.
.Pp
По умолчанию интервал
.Cm включено.
При переключении
.Cm выключен,
белое пространство между аргументами макросов и между
выводами, сгенерированными соседними макросами, но строки текста
между словами и предложениями остается нормальный интервал.
.Pp
При вызове без аргумента
.Ic \&Sm
макрос переключает режим расстановки интервалов.
Использовать его не рекомендуется, так как это затрудняет чтение кода.
.It Ic \&So Ar Блок
Многострочная версия
.Ic \&Sq .
.Tg Sq
.It Ic \&Sq Ar строка
Заключает свои аргументы в
.Sq
одинарные кавычки.
.Pp
Смотрите также
.Ic \&Dq ,
.Ic \&Qq ,
и
.Ic \&So .
.Tg Ss
.It Ic \&Ss Строка заголовка
Начало нового подраздела.
В отличие от
.Ic \&Sh ,
не существует соглашения о наименовании подразделов.
За исключением
.Em ОПИСАНИЕ ,
обычные разделы, описанные в
.Sx СТРУКТУРА РУКОВОДСТВА
редко имеют подразделы.
.Pp
Имена подразделов должны быть уникальными, чтобы их можно было использовать по ключу
.Ic \&Sx .
Хотя этот макрос разбирается, он не должен состоять из дочерних узлов, иначе он
не может быть связан с
.Ic \&Sx .
.Pp
Смотрите также
.Ic \&Pp ,
.Ic \&Sh ,
И
.Ic \&Sx .
.Tg St
.It Ic \&St Fl Ns Ar аббревиатура
Замените аббревиатуру стандарта на его полную форму.
Признаны следующие стандарты.
Если приведено несколько строк без пустой строки между ними,
все они относятся к одному стандарту, и рекомендуется использовать первую форму
рекомендуется.
.Bl -tag - ширина 1n
.It Стандарты языка Си
.Pp
.Bl -tag -ширина "-p1003.1g-2000" -компактный
.It \-ansiC
.St -ansiC
.It \-ansiC-89
.St -ansiC-89
.It \-isoC
.St -isoC
.It \-isoC-90
.St -isoC-90
.br
Оригинальный стандарт C.
.Pp
.It \-isoC-amd1
.St -isoC-amd1
.Pp
.It \-isoC-tcor1
.St -isoC-tcor1
.Pp
.It \-isoC-tcor2
.St -isoC-tcor2
.Pp
.It \-isoC-99
.St -isoC-99
.br
Вторая основная версия стандарта языка C.
.Pp
.It \-isoC-2011
.St -isoC-2011
.br
Третья основная версия стандарта языка Си.
.El
.It POSIX.1 до появления единой спецификации UNIX
.Pp
.Bl -tag -ширина "-p1003.1g-2000" -компактный
.It \-p1003.1-88
.St -p1003.1-88
.It \-p1003.1
.St -p1003.1
.br
Оригинальный стандарт POSIX, основанный на ANSI C.
.Pp
.It \-p1003.1-90
.St -p1003.1-90
.It \-iso9945-1-90
.St -iso9945-1-90
.br
Первое обновление POSIX.1.
.Pp
.It \-p1003.1b-93
.St -p1003.1b-93
.It \-p1003.1b
.St -p1003.1b
.br
Расширения в реальном времени.
.Pp
.It \-p1003.1c-95
.St -p1003.1c-95
.br
POSIX-интерфейсы потоков.
.Pp
.It \-p1003.1i-95
.St -p1003.1i-95
.br
Техническое исправление.
.Pp
.It \-p1003.1-96
.St -p1003.1-96
.It \-iso9945-1-96
.St -iso9945-1-96
.br
Включает POSIX.1-1990, 1b, 1c и 1i.
.El
.It X/Open Portability Guide версии 4 и связанные с ним стандарты
.Pp
.Bl -tag -ширина "-p1003.1g-2000" –компактный
.It \-xpg3
.St -xpg3
.br
Предшественник XPG4, опубликован в 1989 году.
.Pp
.It \-p1003.2
.St -p1003.2
.It \-p1003.2-92
.St -p1003.2-92
.It \-iso9945-2-93
.St -iso9945-2-93
.br
Предшественник XCU4.
.Pp
.It \-p1003.2a-92
.St -p1003.2a-92
.br
Обновления для POSIX.2.
.Pp
.It \-xpg4
.St -xpg4
.br
Основан на POSIX.1 и POSIX.2, опубликованных в 1992 году.
.El
.It Единая спецификация UNIX версии 1 и связанные с ней стандарты
.Pp
.Bl -tag -ширина "-p1003.1g-2000" -компактный
.It \-susv1
.St -susv1
.It \-xpg4.2
.St -xpg4.2
.br
Этот стандарт был опубликован в 1994 году.
Он использовался в качестве основы для сертификации UNIX 95.
Следующие три раздела относятся к его части.
.Pp
.It \-xsh4.2
.St -xsh4.2
.Pp
.It \-xcurses4.2
.St -xcurses4.2
.Pp
.It \-p1003.1g-2000
.St -p1003.1g-2000
.br
Сетевые API, включая сокеты.
.Pp
.It \-svid4
.St -svid4 ,
.br
Опубликовано в 1995 году.
.El
.It Единая спецификация UNIX версии 2 и связанные с ней стандарты
.Pp
.Bl -tag -ширина "-p1003.1g-2000" -компактный
.It \-susv2
.St -susv2
Этот стандарт был опубликован в 1997 году
и также называется X/Open Portability Guide версии 5.
Он был использован в качестве основы для сертификации UNIX 98.
Ниже приведены ссылки на его части.
.Pp
.It \-xbd5
.St -xbd5
.Pp
.It \-xsh5
.St -xsh5
.Pp
.It \-xcu5
.St -xcu5
.Pp
.It \-xns5
.St -xns5
.It \-xns5.2
.St -xns5.2
.El
.It Единая спецификация UNIX версии 3
.Pp
.Bl -tag -ширина "-p1003.1-2001" -компактный
.It \-p1003.1-2001
.St -p1003.1-2001
.It \-susv3
.St -susv3
.br
Этот стандарт основан на C99, SUSv2, POSIX.1-1996, 1d и 1j.
Он также называется X/Open Portability Guide версии 6.
Он используется в качестве основы для сертификации UNIX 03.
.Pp
.It \-p1003.1-2004
.St -p1003.1-2004
.br
Второе и последнее Техническое исправление.
.El
.It Единая спецификация UNIX версии 4
.Pp
.Bl -tag -ширина "-p1003.1g-2000" –компактный
.It \-p1003.1-2008
.St -p1003.1-2008
.It \-susv4
.St -susv4
.br
Этот стандарт также называется
Руководство по переносимости X/Open версии 7.
.El
.It Другие стандарты
.Pp
.Bl -tag - ширина "-p1003.1g-2000" – компактный
.It \-ieee754
.St -ieee754
.br
Арифметика с плавающей точкой.
.Pp
.It \-iso8601
.St -iso8601
.br
Представление дат и времени, опубликовано в 1988 году.
.Pp
.It \-iso8802-3
.St -iso8802-3
.br
Локальные вычислительные сети Ethernet.
.Pp
.It \-ieee1275-94
.St -ieee1275-94
.El
.El
.Tg Sx
.It Ic \&Sx Ar Строка заголовка
Ссылка на раздел или подраздел на той же странице руководства.
Имя ссылаемого раздела или подраздела должно быть идентично
вложенному аргументу, включая пробельные символы.
.Pp
Примеры:
.Dl \&.Sx СТРУКТУРА РУКОВОДСТВА
.Pp
Смотрите также
.Ic \&Sh
И
.Ic \&Ss .
.Tg Sy
.It Ic \&Sy Ar слово ...
Запросите полужирный шрифт.
.Pp
Чаще всего используется для обозначения важности или серьезности (не путать с
путать с подчеркиванием, см.
.Ic \&Em ) .
Если ни один из семантических макросов не подходит, он также подходит для синтаксиса
элементов, которые должны быть приведены или которые появляются дословно.
.Pp
Примеры:
.Bd -литеральный -компактный -смещение отступа
\&.Sy Предупреждение
Если
\&.Sy s
появляется в разрешениях владельца, устанавливается режим установки идентификатора пользователя.
Эта утилита заменяет прежнюю
\&.Sy dumpdir
программа.
.Ed
.Pp
Смотрите также
.Ic \&Em ,
.Ic \&No ,
и
.Ic \&Ql .
.Tg Ta
.It Ic \&Ta
Разделитель ячеек таблицы в
.Ic \&Bl Fl
списков; может использоваться только ниже
.Ic \&It .
.Tg Tg
.It Ic \&Tg Op Ar term
Объявите, что следующая строка ввода начинает определение термина
.Ar.
Этот макрос должен появиться один в своей собственной строке ввода.
Аргументом по умолчанию является первый аргумент первого макроса
на следующей строке.
Аргумент не может содержать пробельных символов, даже если он заключен в кавычки.
Этот макрос представляет собой
.Xr mandoc 1
Расширение, которое обычно игнорируется другими форматерами.
.Pp
При просмотре вывода терминала с расширением
.Xr меньше 1 ,
интерактивный
.Ic :t
можно использовать для перехода к определению
.Ar термин
как описано для
.Ev РУКОВОДСТВО
переменная в
.Xr man 1 ;
при создании HTML-вывода идентификатор фрагмента
.Pq Ic id Нет атрибута
генерируется, чтобы использовать его для глубоких ссылок на это место документа.
.Pp
В большинстве случаев добавление
.Ic \&Tg
будет излишним, поскольку
.Xr mandoc 1
способен автоматически помечать большинство определений.
Этот макрос предназначен для случаев, когда автоматическая маркировка
термин .Ar
неудовлетворительна, например, если определение не помечено
автоматически (ложное отрицание) или если помечаются места, которые
не определяют
.Ar термин
(ложные срабатывания).
Когда есть хотя бы один
.Ic \&Tg
макрос для
.Ar термина,
никакие другие места автоматически не помечаются как определения этого
.Ar термина.
.It Ic \&Tn Ar слово ...
Поддерживается только для совместимости, не используйте его в новых руководствах.
Даже если имя макроса
.Pq Dq Торговое название
предполагает семантическую функцию, но историческое использование непоследовательно, в основном
его используют как макрос презентационного уровня для запроса шрифта с маленькими прописными буквами.
.It Ic \&Ud
Поддерживается только для совместимости, не используйте его в новых руководствах.
Выводит
.Dq В настоящее время находится в разработке.
.It Ic \&Ux
Поддерживается только для совместимости, не используйте его в новых руководствах.
Распечатывается
.Dq Ux .
.Tg Va
.It Ic \&Va Oo Ar type Oc Ar идентификатор ...
Имя переменной.
.Pp
Примеры:
.Dl \&.Va foo
.Dl \&.Va const char *bar ;
.Pp
Для аргументов и параметров функций используйте
.Ic \&Fa
вместо этого.
Для объявления глобальных переменных в
.Em СИНОПСИС
раздел, использовать
.Ic \&Vt .
.Tg Vt
.It Ic \&Vt Ar тип Op Ar идентификатор
Тип переменной.
.Pp
Используется также для обозначения глобальных переменных в
.Em СИНОПСИС
раздел, в котором также указывается имя переменной.
Обратите внимание, что он принимает
.Sx Блок частично-имплицитный
синтаксис, если он вызывается первым макросом в строке ввода в файле
.Em СИНОПСИС
иначе он принимает обычный
.Sx В строке
синтаксис.
В первом случае этот макрос начинает новую выходную строку,
и перед ней вставляется пустая строка, если перед ней есть предшествующее
определение функции или директива включить.
.Pp
Примеры:
.Dl \&.Vt беззнаковый char
.Dl \&.Vt extern const char * const sys_signame[] \&;
.Pp
Для параметров в прототипах функций используйте
.Ic \&Fa
вместо этого, для типов возврата функций
.Ic \&Ft ,
и для имен переменных вне
.Em СИНОПСИС
Раздел
.Ic \&Va ,
даже при включении типа в имя.
Смотрите также
.Sx СТРУКТУРА РУКОВОДСТВА .
.It Ic \&Xc
Закрыть область видимости, открытую командой
.Ic \&Xo .
.It Ic \&Xo Ar блок
Расширить заголовок блока
.Ic \&It
или тело макроса частично-имплицитного блока
за пределы строки ввода.
Изначально этот макрос существовал для того, чтобы обойти ограничение в 9 аргументов
Исторического
.Xr roff 7 .
.Tg Xr
.It Ic \&Xr Ar название раздела
Ссылка на другое руководство
.Pq Qq перекрестная ссылка .
.Pp
Перекрестная ссылка на
.Ar
и
.Ar раздел
номер другой страницы руководства.
.Pp
Примеры:
.Dl \&.Xr mandoc 1
.Dl \&.Xr mandoc 1 \&;
.Dl \&.Xr mandoc 1 \&Ns s behaviour
.El
.Sh СИНТАКС МАКРОСА
Синтаксис макроса зависит от его классификации.
В этом разделе,
.Sq \-arg
относится к аргументам макроса, за которыми может следовать ноль или более
.Sq parm
параметры;
.Sq \&Yo
открывает область действия макроса; и если указано,
.Sq \&Yc
закрывает его.
.Pp
The
.Em Вызываемый
указывает, что макрос можно вызвать, передав его имя
в качестве аргумента другому макросу.
Например,
.Sq \&.Op \&Fl O \&Ar файл
производит
.Sq Op Fl O Ar файл .
Чтобы предотвратить вызов макроса и привести имя макроса к буквальному виду,
отмените его, добавив пробел нулевой ширины,
.Sq \e& .
Например,
.Sq \&Op \e&Fl O
выдает
.Sq Op \e&Fl O .
Если макрос не является вызываемым, но его имя встречается в качестве аргумента
другого макроса, оно интерпретируется как непрозрачный текст.
Например,
.Sq \&.Fl \&Sh
создает
.Sq Fl \&Sh .
.Pp
Сайт
.Em Разобранный
столбец указывает, может ли макрос вызывать другие макросы, получая
их имена в качестве аргументов.
Если макрос не разбирается, но имя другого макроса появляется
в качестве аргумента, оно интерпретируется как непрозрачный текст.
.Pp
The
.Em Scope
если применимо, описывает правила закрытия.
.Ss Блок полноявный
Многострочная область видимости, закрытая явным закрывающим макросом.
Все макросы содержат тела; только
.Ic \&Bf
и
.Pq по желанию
.Ic \&Bl
содержат головку.
.Bd -литеральный - смещенный отступ
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" " закрыто XXX" с отступом
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Ic \&Bd  Ta    \&No     Ta    \&No     Ta    closed by Ic \&Ed
.It Ic \&Bf  Ta    \&No     Ta    \&No     Ta    closed by Ic \&Ef
.It Ic \&Bk  Ta    \&No     Ta    \&No     Ta    closed by Ic \&Ek
.It Ic \&Bl  Ta    \&No     Ta    \&No     Ta    closed by Ic \&El
.It Ic \&Ed  Ta    \&No     Ta    \&No     Ta    opened by Ic \&Bd
.It Ic \&Ef  Ta    \&No     Ta    \&No     Ta    opened by Ic \&Bf
.It Ic \&Ek  Ta    \&No     Ta    \&No     Ta    opened by Ic \&Bk
.It Ic \&El  Ta    \&No     Ta    \&No     Ta    opened by Ic \&Bl
.El
.Ss Блок полный неявный
Многострочная область видимости, закрытая концом файла или неявно другим макросом.
Все макросы имеют тело; некоторые
.Po
.Ic \&It Fl заглавная буква ,
.Fl дефис ,
.Fl тире ,
.Fl перечисление ,
.Fl элемент
.Pc
не имеют голов; только одна
.Po
.Ic \&It
в
.Ic \&Bl Fl колонна
.Pc
имеет несколько заголовков.
.Bd -литеральный - смещенный отступ
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead... \(lBTa head...\(rB\(rB
\(lBbody...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" " закрыто XXXXXXXXX" с отступом
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Ic \&It Ta \&No Ta Yes  Ta closed by Ic \&It , Ic \&El
.It Ic \&Nd Ta \&No Ta \&No Ta closed by Ic \&Sh
.It Ic \&Nm Ta \&No Ta Yes  Ta closed by Ic \&Nm , Ic \&Sh , Ic \&Ss
.It Ic \&Sh Ta \&No Ta Yes  Ta closed by Ic \&Sh
.It Ic \&Ss Ta \&No Ta Yes  Ta closed by Ic \&Sh , Ic \&Ss
.El
.Pp
Обратите внимание, что
.Ic \&Nm
макрос является
.Sx Block полностью имплицитный
только в том случае, если он вызывается в качестве первого макроса
в
.Em СИНОПСИС
в строке раздела, в противном случае он является
.Sx В строке .
.Ss Блок частично-явный
Подобен блоку полного эксплицита, но также имеет однострочную область видимости.
Каждый из них имеет как минимум тело и, в ограниченных случаях, голову
.Po
.Ic \&Fo ,
.Ic \&Eo
.Pc
и/или хвост
.Pq Ic \&Ec .
.Bd -литеральный - смещенный отступ
\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB
\(lBbody...\(rB
\&.Yc \(lBtail...\(rB

\&.Yo \(lB\-arg \(lBparm...\(rB\(rB \(lBhead...\(rB \
\(lBbody...\(rB \&Yc \(lBtail...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" " закрыто XXXX" с отступом
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Ic \&Ac  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Ao
.It Ic \&Ao  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Ac
.It Ic \&Bc  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Bo
.It Ic \&Bo  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Bc
.It Ic \&Brc Ta    Yes      Ta    Yes      Ta    opened by Ic \&Bro
.It Ic \&Bro Ta    Yes      Ta    Yes      Ta    closed by Ic \&Brc
.It Ic \&Dc  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Do
.It Ic \&Do  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Dc
.It Ic \&Ec  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Eo
.It Ic \&Eo  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Ec
.It Ic \&Fc  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Fo
.It Ic \&Fo  Ta    \&No     Ta    \&No     Ta    closed by Ic \&Fc
.It Ic \&Oc  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Oo
.It Ic \&Oo  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Oc
.It Ic \&Pc  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Po
.It Ic \&Po  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Pc
.It Ic \&Qc  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Oo
.It Ic \&Qo  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Oc
.It Ic \&Re  Ta    \&No     Ta    \&No     Ta    opened by Ic \&Rs
.It Ic \&Rs  Ta    \&No     Ta    \&No     Ta    closed by Ic \&Re
.It Ic \&Sc  Ta    Yes      Ta    Yes      Ta    opened by Ic \&So
.It Ic \&So  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Sc
.It Ic \&Xc  Ta    Yes      Ta    Yes      Ta    opened by Ic \&Xo
.It Ic \&Xo  Ta    Yes      Ta    Yes      Ta    closed by Ic \&Xc
.El
.Ss Блок частичный-имплицитный
Как и блок с полным имплицитом, но с однострочной областью видимости, закрытой
концом строки.
.Bd -литеральный - смещенный отступ
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBbody...\(rB \(lBres...\(rB
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" – с отступом
.It Em Macro Ta Em Callable Ta Em Parsed
.It Ic \&Aq  Ta    Yes      Ta    Yes
.It Ic \&Bq  Ta    Yes      Ta    Yes
.It Ic \&Brq Ta    Yes      Ta    Yes
.It Ic \&D1  Ta    \&No     Ta    \&Yes
.It Ic \&Dl  Ta    \&No     Ta    Yes
.It Ic \&Dq  Ta    Yes      Ta    Yes
.It Ic \&En  Ta    Yes      Ta    Yes
.It Ic \&Op  Ta    Yes      Ta    Yes
.It Ic \&Pq  Ta    Yes      Ta    Yes
.It Ic \&Ql  Ta    Yes      Ta    Yes
.It Ic \&Qq  Ta    Yes      Ta    Yes
.It Ic \&Sq  Ta    Yes      Ta    Yes
.It Ic \&Vt  Ta    Yes      Ta    Yes
.El
.Pp
Обратите внимание, что
.Ic \&Vt
макрос является
.Sx Блок частично-имплицитный
только в том случае, если он вызывается в качестве первого макроса
в
.Em СИНОПСИС
секции, в противном случае он является
.Sx Встраивание .
.Ss Специальный макрос блока
The
.Ic \&Ta
можно использовать только ниже
.Ic \&It
в
.Ic \&Bl Fl
списков.
Он разграничивает блоки, представляющие ячейки таблицы;
У этих блоков есть тела, но нет голов.
.Bl -column "MacroX" "CallableX" "ParsedX" " закрыто XXXX" с отступом
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Scope
.It Ic \&Ta  Ta    Yes      Ta    Yes    Ta closed by Ic \&Ta , Ic \&It
.El
.Ss В строке
Закрывается до конца строки, фиксированная длина аргумента,
и/или последующими макросами.
Строчные макросы имеют только текстовые дочерние элементы.
Если число (или неравенство) аргументов
.Pq n ,
то макрос принимает произвольное число аргументов.
.Bd -литеральный - смещение отступа
\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB \(lBres...\(rB

\&.Yo \(lB\-arg \(lBval...\(rB\(rB \(lBargs...\(rB Yc...

\&.Yo \(lB\-arg \(lBval...\(rB\(rB arg0 arg1 argN
.Ed
.Bl -column "MacroX" "CallableX" "ParsedX" "Аргументы" –с отступом
.It Em Macro Ta Em Callable Ta Em Parsed Ta Em Агрументы
.It Ic \&%A  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%B  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%C  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%D  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%I  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%J  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%N  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%O  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%P  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%Q  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%R  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%T  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%U  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&%V  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&Ad  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&An  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ap  Ta    Yes      Ta    Yes      Ta    0
.It Ic \&Ar  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&At  Ta    Yes      Ta    Yes      Ta    1
.It Ic \&Bsx Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Bt  Ta    \&No     Ta    \&No     Ta    0
.It Ic \&Bx  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Cd  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Cm  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Db  Ta    \&No     Ta    \&No     Ta    1
.It Ic \&Dd  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Dt  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Dv  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Dx  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Em  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Er  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Es  Ta    Yes      Ta    Yes      Ta    2
.It Ic \&Ev  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ex  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Fa  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Fd  Ta    \&No     Ta    \&No     Ta    >0
.It Ic \&Fl  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Fn  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Fr  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ft  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Fx  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Hf  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Ic  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&In  Ta    \&No     Ta    \&No     Ta    1
.It Ic \&Lb  Ta    \&No     Ta    \&No     Ta    1
.It Ic \&Li  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Lk  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Lp  Ta    \&No     Ta    \&No     Ta    0
.It Ic \&Ms  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Mt  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Nm  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&No  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ns  Ta    Yes      Ta    Yes      Ta    0
.It Ic \&Nx  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Os  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Ot  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ox  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Pa  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Pf  Ta    Yes      Ta    Yes      Ta    1
.It Ic \&Pp  Ta    \&No     Ta    \&No     Ta    0
.It Ic \&Rv  Ta    \&No     Ta    \&No     Ta    n
.It Ic \&Sm  Ta    \&No     Ta    \&No     Ta    <2
.It Ic \&St  Ta    \&No     Ta    Yes      Ta    1
.It Ic \&Sx  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Sy  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Tg  Ta    \&No     Ta    \&No     Ta    <2
.It Ic \&Tn  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Ud  Ta    \&No     Ta    \&No     Ta    0
.It Ic \&Ux  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Va  Ta    Yes      Ta    Yes      Ta    n
.It Ic \&Vt  Ta    Yes      Ta    Yes      Ta    >0
.It Ic \&Xr  Ta    Yes      Ta    Yes      Ta    2
.El
.Ss Разделители
Если аргумент макроса состоит из одного единственного входного символа
рассматриваемый как разделитель, аргумент получает специальную обработку.
Это не относится к случаям, когда разделители появляются в аргументах, содержащих
более одного символа.
Следовательно, чтобы избежать специальной обработки и просто обрабатывать его
как с любым другим аргументом, разделитель можно экранировать, добавив к нему
пробел нулевой ширины
.Pq Sq \e& .
В текстовых строках разделители никогда не требуют экранирования, но могут использоваться
как обычные знаки препинания.
.Pp
Для многих макросов, когда ведущие аргументы являются открывающими разделителями,
эти разделители ставятся перед областью видимости макроса,
а когда завершающие аргументы являются закрывающими разделителями,
эти разделители ставятся после области видимости макроса.
Пробелы подавляются после открывающих разделителей
и перед закрывающими разделителями.
Например,
.Pp
.D1 Pf \. \&Aq "( [ слово ] ) ."
.Pp
отображается как:
.Pp
.D1 Aq ( [ слово ] ) .
.Pp
Открывающими разделителями являются:
.Pp
.Bl -tag -ширина Ds -смещение отступа -компактный
.It \&(
левая скобка
.It \&[
левая скобка
.El
.Pp
Закрывающие разделители:
.Pp
.Bl -tag -ширина Ds -смещение отступа -компактный
.It \&.
точка
.It \&,
запятая
.It \&:
двоеточие
.It \&;
точка с запятой
.It \&)
правая скобка
.It \&]
правая скобка
.It \&?
вопросительный знак
.It \&!
восклицательный знак
.El
.Pp
Обратите внимание, что даже точка, которой предшествует обратная косая черта
.Pq Sq \e.\&
получает такое особое обращение; используйте
.Sq \e&.\&
для предотвращения этого.
.Pp
Многие встроенные макросы прерывают свою область действия, когда встречают
разделители, и возобновляют свою область действия, когда следуют дополнительные аргументы, которые
не являются разделителями.
Например,
.Pp
.D1 Pf \. \&Fl "a ( b | c \e*(Ba d ) e"
.Pp
отображается как:
.Pp
.D1 Fl a ( b | c \*(Ba d ) e
.Pp
Это относится как к открывающим, так и к закрывающим разделителям,
а также к среднему разделителю, который не подавляет интервал:
.Pp
.Bl -tag - ширина Ds - смещение отступа - компактный
.It \&|
вертикальный столбец
.El
.Pp
В качестве особого случая предопределенная строка \e*(Ba обрабатывается и отображается
так же, как и обычная
.Sq \&|
символ.
Использовать эту предопределенную строку в новых руководствах не рекомендуется.
.Pp
Добавление пробела нулевой ширины
.Pq Sq \e&
в конец строки ввода также полезно для предотвращения интерпретации
точки, восклицательного или вопросительного знака как конца предложения.
предложения, например, когда аббревиатура встречается
в конце строки ввода текста или макроса.
.SsIn Работа со шрифтом
.Nm
В документах рекомендуется использовать семантическую разметку для того, чтобы
для автоматического выбора подходящих шрифтов; только в случае отсутствия подходящей семантической разметки
следует вернуться к
.Sx Физическая разметка
макросы.
При использовании любого
.Nm
макрос переключает
.Xr roff 7
режим шрифта, он будет автоматически восстанавливать предыдущий шрифт при выходе из
своей области действия.
Ручное переключение шрифта с помощью макроса
.Xr roff 7
.Ql \ef
использование экранирующих последовательностей шрифтов никогда не требуется.
.Sh СОВМЕСТИМОСТЬ
В этом разделе приводится неполный список проблем совместимости
между mandoc и GNU troff
.Pq Qq groff .
.Pp
В groff обнаружено следующее проблемное поведение:
.Pp
.Bl -dash –компактный
.It
.Ic \&Pa
не форматирует свои аргументы при использовании в разделе ФАЙЛЫ при
некоторых типах списков.
.It
.Ic \&Ta
может вызываться только другими макросами, но не в начале строки.
.It
.Sq \ef
.Pq Шрифт
и
.Sq \eF
.Pq Шрифт семейства
.Sx Украшение текста
нестандартно ведут себя эскейпы, когда указываются в области строк-макро.
.It
Отрицательные единицы масштабирования возвращаются в предыдущие строки.
Вместо этого mandoc обрезает их до нуля.
.El
.Pp
Следующие функции не реализованы в mandoc:
.Pp
.Bl -dash -компактный
.It
.Ic \&Bd Fl файл Ar файл
не поддерживается по соображениям безопасности.
.It
.Ic \&Bd
.Fl заполнен
не корректирует правое поле, а является псевдонимом для
.Ic \&Bd
.Fl ragged .
.It
.Ic \&Bd
.Fl литеральный
не использует буквенный шрифт, а является псевдонимом для
.Ic \&Bd
.Fl незаполненный .
.It
.Ic \&Bd
.Fl смещение Cm центр
и
.Fl смещение Cm вправо
не работают.
Groff также не реализует рендеринг по центру и заподлицо справа,
но создает большие отступы.
.El
.Sh СМОТРИТЕ ТАКЖЕ 
.Xr man 1 ,
.Xr mandoc 1 ,
.Xr eqn 7 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr roff 7 ,
.Xr tbl 7
.Pp
Веб-страница
.Lk https://mandoc.bsd.lv/mdoc/ "Расширенная документация для языка mdoc"
содержит несколько обучающих страниц для начинающих, обширное руководство по стилю для опытных авторов, а также алфавитный указатель, помогающий выбрать подходящий вариант.
руководство для опытных авторов, а также алфавитный указатель, помогающий выбрать
алфавитный указатель, помогающий выбрать лучшие макросы для различных видов контента.
.Pp
Страница руководства
.Lk https://man.voidlinux.org/groff_mdoc "groff_mdoc(7)"
содержащаяся в
.Dq groff
пакет документов, содержащий точно такой же язык в несколько ином стиле.
.Sh ИСТОРИЯ
The
.Nm
впервые появился в виде пакета макросов troff в
.Bx 4.4 .
Позже она была существенно обновлена Вернером Лембергом и Русланом Ермиловым
в версии groff-1.17.
Автономная реализация, входящая в состав
.Xr mandoc 1
написанная Кристапсом Дзонсонсом, появилась в
.Ox 4.6 .
.Sh АВТОРЫ
The
.Nm
была написана
.An Kristaps Dzonsons Aq Mt kristaps@bsd.lv .

